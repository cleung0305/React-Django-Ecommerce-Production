{"version":3,"sources":["constants/productConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/userReducers.js","reducers/productReducers.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","hooks/usePaginate.js","components/Paginate.js","actions/productActions.js","components/TopProductCarousel.js","screens/HomeScreen.js","hooks/useScript.js","services/googleLogin.js","components/GoogleSignIn.js","components/FormContainer.js","screens/LoginScreen.js","screens/LogoutScreen.js","screens/RegisterScreen.js","components/ProfileHeader.js","screens/ProfileScreen.js","actions/orderActions.js","screens/ProfileOrdersScreen.js","actions/cartActions.js","screens/ProductScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","components/CartSummaryAccordion.js","screens/CartScreen.js","constants/usStatesConstants.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/PlaceOrderPayScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_DETAIL_RESET","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_RESET","USER_DETAILS_RESET","USER_UPDATE_PROFILE_RESET","USER_UPDATE_RESET","ORDER_CREATE_RESET","ORDER_CREATE_RESET_DEMO","ORDER_PAY_RESET","ORDER_DELIVER_RESET","reducer","combineReducers","userRegister","state","arguments","length","undefined","action","type","loading","userInfo","payload","error","userLogin","userDetails","user","Object","objectSpread","userUpdateProfile","success","userList","users","userDelete","message","userUpdate","productList","products","page","pages","productDetail","product","reviews","productTop","productListAdmin","productCreate","productUpdate","productDelete","reviewCreate","cart","cartItems","shippingAddress","item","existItem","find","cartItem","productId","qtyToBeAdded","qty","alert","qtyFinal","countInStock","concat","name","map","toConsumableArray","itemToRemoveId","filter","upItem","upExistItem","paymentMethod","subtotalPrice","reduce","acc","price","toFixed","shippingPrice","Number","taxPrice","totalPrice","orderCreate","order","orderDetails","orderItems","orderPay","orderPayCancel","orderDeliver","myOrders","orders","orderList","orderCreateDemo","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","SearchBox","_ref","_ref$route","route","_useState","useState","_useState2","slicedToArray","keyword","setKeyword","navigate","useNavigate","location","useLocation","react_default","a","createElement","Form","onSubmit","e","preventDefault","pathname","className","Control","value","onChange","target","Button","variant","loginUser","email","password","asyncToGenerator","regenerator_default","mark","_callee","dispatch","config","_yield$axios$post","data","wrap","_context","prev","next","headers","Content-type","axios","post","username","sent","setItem","stringify","t0","response","detail","stop","_x","this","logoutUser","removeItem","registerUser","_ref2","_callee2","_yield$axios$post2","_context2","_x2","getUserDetails","userId","_ref3","_callee3","getState","_getState","_yield$axios$get","_context3","Authorization","token","get","_x3","_x4","updateUserProfile","_ref4","_callee4","_getState2","_yield$axios$put","_context4","put","_x5","_x6","getUserList","_ref5","_callee5","_getState3","_yield$axios$get2","_context5","_x7","_x8","deleteUser","id","_ref6","_callee6","_getState4","_yield$axios$delete","_context6","delete","_x9","_x10","updateUser","_ref7","_callee7","_getState5","_yield$axios$put2","_context7","_x11","_x12","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","react_router_bootstrap","to","Brand","Toggle","aria-controls","Collapse","components_SearchBox","Nav","Link","Badge","pill","NavDropdown","title","menuVariant","Item","Divider","onClick","Fragment","isAdmin","Footer","Row","Col","Rating","text","color","Array","i","style","Product","Card","react_router_dom","_id","Img","src","image","Body","Title","as","Text","components_Rating","rating","numReviews","Loader","Spinner","animation","role","height","width","margin","display","Message","children","_ref$fade","fade","isShowingAlert","setShowingAlert","useEffect","setTimeout","Alert","DOTS","range","start","end","from","_","idx","usePaginate","_ref$pageSize","pageSize","_ref$siblingCount","siblingCount","useMemo","leftSiblingIndex","Math","max","rightSiblingIndex","min","showLeftDots","showRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","Paginate","_ref$keyword","_ref$isAdmin","paginateRange","split","classnames","key","disabled","pageNumber","selected","components_Loader","listProducts","listProductDetail","listTopProducts","_yield$axios$get3","listProductsAdmin","_yield$axios$get4","Content-Type","createProduct","updateProduct","deleteProduct","createReview","review","_ref8","_callee8","_context8","_x13","TopProductCarousel","components_Message","Carousel","pause","Image","alt","Caption","HomeScreen","search","components_TopProductCarousel","xs","sm","md","lg","xl","components_Product","components_Paginate","useScript","url","script","document","async","body","appendChild","removeChild","googleLogin","access_token","res","abrupt","REACT_APP_GOOGLE_CLIENT_ID","process","window","handleGoogleLogin","info","credential","jwt_decode","first_name","given_name","last_name","family_name","aud","reload","GoogleSignIn","data-client_id","data-login_uri","data-callback","data-auto_prompt","class","data-type","data-size","data-theme","data-text","data-shape","data-logo_alignment","FormContainer","LoginScreen","setEmail","_useState3","_useState4","setPassword","redirect","_useState5","_useState6","sdkReadyGoogle","setSdkReadyGoogle","google","components_FormContainer","controlId","Group","Label","placeholder","required","components_GoogleSignIn","LogoutScreen","timeout","clearTimeout","RegisterScreen","setName","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","setMessage","userInfoLogin","_useState11","_useState12","sdkReady","setSdkReady","controlid","ProfileHeader","ProfileScreen","messageSuccess","setMessageSuccess","components_ProfileHeader","plaintext","readOnly","createOrder","createOrderDemo","getOrderDetails","authorization","payOrder","paymentResult","payOrderCancel","deliverOrder","_getState6","getMyOrders","_getState7","_x14","getOrders","_getState8","_x15","_x16","PastOrdersScreen","Table","striped","responsive","String","padStart","created_date","substr","total_price","isPaid","paid_date","isDelivered","deliverd_date","addToCart","removeFromCart","updateCart","upQty","cartValidationMessage","saveShippingAddress","savePaymentMethod","calculatePrice","ProductScreen","useParams","setQty","setRating","comment","setComment","loadingReview","successReview","errorReview","fluid","ListGroup","description","keys","x","size","created_at","dist","ratingValue","fillColor","emptyColor","allowHalfIcon","showTooltip","tooltipArray","row","ProductListScreen","successCreate","loadingCreate","errorCreate","successDelete","loadingDelete","errorDelete","messageDelete","bordered","hover","brand","category","isPublished","confirm","ProductEditScreen","setImage","setBrand","setCategory","setDescription","setPrice","_useState13","_useState14","setCountInStock","_useState15","_useState16","setIsPublished","_useState17","_useState18","uploading","setUploading","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","formData","files","FormData","append","label","custom","rows","Check","checked","CartSummaryAccordion","items","subPrice","sPrice","tPrice","totPrice","Accordion","defaultActiveKey","flush","eventkey","fontSize","CartScreen","checkoutHandler","checkoutMethod","rounded","Select","aria-label","components_CartSummaryAccordion","STATES","abbreviation","CheckoutSteps","step1","step2","step3","path","ShippingScreen","streetAddress","setStreetAddress","aptAddress","setAptAddress","city","setCity","setState","zip","setZip","components_CheckoutSteps","PaymentScreen","setPaymentMethod","PlaceOrderScreen","orderDemo","successDemo","loadingPay","successPay","paypal","onload","addPayPalScript","index","lib","amount","onCancel","currOrderId","console","log","onSuccess","OrderScreen","loadingDeliver","successDeliver","orderItem","street_address","apt_address","shipping_price","tax_price","UserListScreen","UserEditScreen","setIsAdmin","OrderListScreen","App","components_Header","react_router","element","screens_HomeScreen","exact","screens_LoginScreen","screens_LogoutScreen","screens_RegisterScreen","screens_ProfileScreen","ProfileOrdersScreen","screens_UserListScreen","screens_UserEditScreen","screens_ProductListScreen","screens_ProductEditScreen","screens_OrderListScreen","screens_ProductScreen","screens_CartScreen","screens_ShippingScreen","screens_PaymentScreen","PlaceOrderPayScreen","screens_OrderScreen","components_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.1eeff43e.chunk.js","sourcesContent":["// product list constant\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n// Get Top Products\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n// product detail constant\nexport const PRODUCT_DETAIL_REQUEST = 'PRODUCT_DETAIL_REQUEST'\nexport const PRODUCT_DETAIL_SUCCESS = 'PRODUCT_DETAIL_SUCCESS'\nexport const PRODUCT_DETAIL_FAIL = 'PRODUCT_DETAIL_FAIL'\nexport const PRODUCT_DETAIL_RESET = 'PRODUCT_DETAIL_RESET'\n\n// products admin constant\nexport const PRODUCT_LIST_ADMIN_REQUEST = 'PRODUCT_LIST_ADMIN_REQUEST'\nexport const PRODUCT_LIST_ADMIN_SUCCESS = 'PRODUCT_LIST_ADMIN_SUCCESS'\nexport const PRODUCT_LIST_ADMIN_FAIL = 'PRODUCT_LIST_ADMIN_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n//Create Review\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'","//Login\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\n//Register\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\n//User Profile\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\n//Update User Profile\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\n//For Admin Page\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_CREATE_REQUEST_DEMO= 'ORDER_CREATE_REQUEST_DEMO'\nexport const ORDER_CREATE_SUCCESS_DEMO= 'ORDER_CREATE_SUCCESS_DEMO'\nexport const ORDER_CREATE_FAIL_DEMO= 'ORDER_CREATE_FAIL_DEMO'\nexport const ORDER_CREATE_RESET_DEMO= 'ORDER_CREATE_RESET_DEMO'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_PAY_CANCEL_REQUEST = 'ORDER_PAY_CANCEL_REQUEST'\nexport const ORDER_PAY_CANCEL_SUCCESS = 'ORDER_PAY_CANCEL_SUCCESS'\nexport const ORDER_PAY_CANCEL_FAIL = 'ORDER_PAY_CANCEL_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productListReducer, productDetailReducer, productTopReducer, productListAdminReducer, productCreateReducer, productUpdateReducer, productDeleteReducer, reviewCreateReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderCreateDemoReducer, orderDetailsReducer, orderPayReducer, orderPayCancelReducer, orderDeliverReducer, myOrdersReducer, OrdersReducer } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    userRegister: userRegisterReducer,\n    userLogin: userLoginReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    productList: productListReducer,\n    productDetail: productDetailReducer,\n    productTop: productTopReducer,\n    productListAdmin: productListAdminReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productDelete: productDeleteReducer,\n    reviewCreate: reviewCreateReducer,\n\n    cart: cartReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderPayCancel: orderPayCancelReducer,\n    orderDeliver: orderDeliverReducer,\n    myOrders: myOrdersReducer,\n    orderList: OrdersReducer,\n\n    orderCreateDemo: orderCreateDemoReducer, //order create demo\n})\n\n/** Get Cart info from local storage*/\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \n        JSON.parse(localStorage.getItem('cartItems')) : []\n\n/** Get User info from local storage*/\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \n        JSON.parse(localStorage.getItem('userInfo')) : null\n\n/** Get Shipping Address info from local storage*/\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: { \n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n                composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import { \n    //Regular user\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET,\n\n    //Admin user\n    USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = { }, action) => {\n    switch(action.type){\n        //Regular Login\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = { }, action) => {\n    switch(action.type){\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user:{} }, action) => {\n    switch(action.type){\n        case USER_DETAILS_REQUEST:\n            return {...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        \n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch(action.type){\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        case USER_UPDATE_PROFILE_RESET:\n            return { }\n        \n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = { users:[] }, action) => {\n    switch(action.type){\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        \n        case USER_LIST_RESET:\n            return { users:[] }\n        \n        default:\n            return state\n    }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch(action.type){\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true, message: action.payload }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch(action.type){\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        case USER_UPDATE_RESET:\n            return { user:{} }\n        \n        default:\n            return state\n    }\n}","import { \n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\n    PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS, PRODUCT_DETAIL_FAIL, PRODUCT_DETAIL_RESET,\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\n\n    //Admin products\n    PRODUCT_LIST_ADMIN_REQUEST, PRODUCT_LIST_ADMIN_SUCCESS, PRODUCT_LIST_ADMIN_FAIL,\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\n\n    //Reviews\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET\n} from '../constants/productConstants'\n\n//Product List for home page\nexport const productListReducer = (state = {products:[]}, action) =>{\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return {loading: true, products: []}\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                        loading: false,\n                        products: action.payload.products, \n                        page: action.payload.page, \n                        pages: action.payload.pages \n                    }\n\n        case PRODUCT_LIST_FAIL:\n            return {loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n//Product Detail\nexport const productDetailReducer = (state = { product:{reviews:[]} }, action) => {\n    switch(action.type) {\n        case PRODUCT_DETAIL_REQUEST:\n            return {loading: true, ...state}\n\n        case PRODUCT_DETAIL_SUCCESS:\n            return {loading: false, product: action.payload }\n\n        case PRODUCT_DETAIL_FAIL:\n            return {loading: false, error: action.payload }\n\n        case PRODUCT_DETAIL_RESET:\n            return { product:{reviews:[]} }\n\n        default:\n            return state\n    }\n}\n\n// Product Top 5\nexport const productTopReducer = (state = {products:[]}, action) => {\n    switch(action.type){\n        case PRODUCT_TOP_REQUEST:\n            return { loading:true, products:[] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading:false, success:true, products:action.payload }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading:false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n// Product List for admin\nexport const productListAdminReducer = (state = {products:[]}, action) =>{\n    switch (action.type) {\n        case PRODUCT_LIST_ADMIN_REQUEST:\n            return {loading: true, products: []}\n\n        case PRODUCT_LIST_ADMIN_SUCCESS:\n            return {\n                        loading: false, \n                        products: action.payload.products, \n                        page: action.payload.page, \n                        pages: action.payload.pages\n                    }\n\n        case PRODUCT_LIST_ADMIN_FAIL:\n            return {loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n// Product Create \nexport const productCreateReducer = (state = {}, action) =>{\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return {loading: true}\n\n        case PRODUCT_CREATE_SUCCESS:\n            return {loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return {loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Product Update\nexport const productUpdateReducer = (state = { product: {} }, action) =>{\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return {loading: true}\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return {loading: false, success: true }\n\n        case PRODUCT_UPDATE_FAIL:\n            return {loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return {product: {}}\n\n        default:\n            return state\n    }\n}\n\n//Product Delete\nexport const productDeleteReducer = (state = {}, action) => {\n    switch(action.type){\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true, message: action.payload }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\n//Create Review\nexport const reviewCreateReducer = (state = {}, action) =>{\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return {loading: true}\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return {loading: false, success: true }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return {loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_ITEM, CART_VALIDATION_MESSAGE, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CALCULATE_PRICE, CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems:[], shippingAddress:{}, message:'' }, action) => {\n    switch(action.type){\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(cartItem => cartItem.productId === item.productId) //check if the item to be updated are already in the cart\n            const qtyToBeAdded = item.qty\n            let alert = ''\n\n            if(existItem){\n                // update the qty of the item, if desired qty > countInStock, then set to countInStock\n                const qtyFinal = (qtyToBeAdded + existItem.qty) > item.countInStock ? item.countInStock : (qtyToBeAdded + existItem.qty)\n                item.qty = qtyFinal\n                alert += (qtyToBeAdded + existItem.qty) > item.countInStock && item.countInStock - existItem.qty >= 1 ? `Added ${item.countInStock - existItem.qty} of '${item.name}' to cart, ` : ''\n                alert += (qtyToBeAdded + existItem.qty) > item.countInStock ? `Sorry, we do not have enough item in stock to fulfill your demand. `\n                            : `Added ${qtyToBeAdded} of '${item.name}' to cart`\n\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map(cartItem => \n                            cartItem.productId === existItem.productId ? item : cartItem //replace the cartItem with the new Item, which has an updated qty\n                        ),\n                    message: alert\n                }\n            }else{\n                alert = `Added ${item.qty} of '${item.name}' to cart` //Successfully added to cart\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, item],\n                    message: alert\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            const itemToRemoveId = action.payload\n            return{\n                ...state,\n                cartItems: state.cartItems.filter(cartItem => cartItem.productId !== itemToRemoveId)\n            }\n\n        case CART_UPDATE_ITEM:\n            const upItem = action.payload\n            const upExistItem = state.cartItems.find(cartItem => cartItem.productId === upItem.productId) //check if the item to be updated are already in the cart\n            if(upExistItem){\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map(cartItem => (\n                            cartItem.productId === upExistItem.productId ? upItem : cartItem //replace the cartItem with the new Item, which has an updated qty\n                        )),\n                    message: '',\n                }\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems],\n                    message: '',\n                }\n            }\n\n        case CART_VALIDATION_MESSAGE:\n            return {\n                ...state,\n                message: action.payload\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CALCULATE_PRICE:\n            const subtotalPrice = state.cartItems.reduce((acc, cartItem) => acc + cartItem.price * cartItem.qty, 0).toFixed(2)\n            const shippingPrice = Number(subtotalPrice >= 100 ? 0 : 10).toFixed(2)\n            const taxPrice = Number((0.082) * subtotalPrice).toFixed(2)\n            const totalPrice = (Number(subtotalPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\n            return {\n                ...state,\n                subtotalPrice: subtotalPrice,\n                shippingPrice: shippingPrice,\n                taxPrice: taxPrice,\n                totalPrice: totalPrice,\n            }\n\n        case CART_CLEAR_ITEMS: // Fired off from OrderAction, after creating an order\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return {...state}\n    }\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_UPDATE_ITEM = 'CART_UPDATE_ITEM'\nexport const CART_VALIDATION_MESSAGE = \"CART_VALIDATION_MESSAGE\"\n\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\"\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\"\nexport const CART_CALCULATE_PRICE = \"CART_CALCULATE_PRICE\"\n\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\"","import { \n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET,\n    ORDER_PAY_CANCEL_REQUEST, ORDER_PAY_CANCEL_SUCCESS, ORDER_PAY_CANCEL_FAIL,\n    ORDER_CREATE_REQUEST_DEMO, ORDER_CREATE_SUCCESS_DEMO, ORDER_CREATE_FAIL_DEMO, ORDER_CREATE_RESET_DEMO, //Demo \n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET,\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL\n} from '../constants/orderConstants'\n\n\n//create an order\nexport const orderCreateReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_CREATE_REQUEST:\n            return { loading: true }\n\n        case ORDER_CREATE_SUCCESS:\n            return { loading:false, success:true, order:action.payload }\n\n        case ORDER_CREATE_FAIL:\n            return { loading:false, error:action.payload }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n//create an order **Demo**\nexport const orderCreateDemoReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_CREATE_REQUEST_DEMO:\n            return { loading: true }\n\n        case ORDER_CREATE_SUCCESS_DEMO:\n            return { loading:false, success:true, order:action.payload }\n\n        case ORDER_CREATE_FAIL_DEMO:\n            return { loading:false, error:action.payload }\n\n        case ORDER_CREATE_RESET_DEMO:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Order details\nexport const orderDetailsReducer = (state={ loading:true, orderItems:[], shippingAddress:{} }, action) => {\n    switch(action.type){\n        case ORDER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case ORDER_DETAILS_SUCCESS:\n            return { loading:false, order:action.payload }\n\n        case ORDER_DETAILS_FAIL:\n            return { loading:false, error:action.payload }\n\n        default:\n            return state\n    }\n}\n\n//pay the order\nexport const orderPayReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_PAY_REQUEST:\n            return { loading: true }\n\n        case ORDER_PAY_SUCCESS:\n            return { loading:false, success: true }\n\n        case ORDER_PAY_FAIL:\n            return { loading:false, error:action.payload }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const orderPayCancelReducer = (state = {}, action) => {\n    switch(action.type){\n        case ORDER_PAY_CANCEL_REQUEST:\n            return { loading: true }\n\n        case ORDER_PAY_CANCEL_SUCCESS:\n            return { loading: false, success: true, message: action.payload }\n\n        case ORDER_PAY_CANCEL_FAIL:\n            return { loading: false, error: action.payload }\n        \n        default:\n            return state\n    }\n}\n\n//mark order delivered\nexport const orderDeliverReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_DELIVER_REQUEST:\n            return { loading: true }\n\n        case ORDER_DELIVER_SUCCESS:\n            return { loading:false, success: true }\n\n        case ORDER_DELIVER_FAIL:\n            return { loading:false, error:action.payload }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Show all my orders\nexport const myOrdersReducer = (state={ orders:[] }, action) => {\n    switch(action.type){\n        case ORDER_LIST_MY_REQUEST:\n            return { loading: true }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return { loading:false, orders:action.payload }\n\n        case ORDER_LIST_MY_FAIL:\n            return { loading:false, error:action.payload }\n\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] }\n\n        default:\n            return state\n    }\n}\n\n// Admin order list\nexport const OrdersReducer = (state={ orders:[] }, action) => {\n    switch(action.type){\n        case ORDER_LIST_REQUEST:\n            return { loading: true }\n\n        case ORDER_LIST_SUCCESS:\n            return { loading:false, orders:action.payload }\n\n        case ORDER_LIST_FAIL:\n            return { loading:false, error:action.payload }\n\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nfunction SearchBox({ route='' }) {\n\n    const [keyword, setKeyword] = useState('')\n\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(keyword){\n            navigate(`${route}/?keyword=${keyword}&page=1`)\n        } else{\n            navigate(location.pathname)\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} className=\"d-flex\">\n            <Form.Control type='text' name='q' value={keyword} onChange={(e) => setKeyword(e.target.value)} className=\"mr-sm-2 ml-sm-5\">\n\n            </Form.Control>\n            <Button type=\"submit\" variant=\"outline-secondary\" className=\"p-2\">\n                Search\n            </Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\n\nimport { \n    //Regular user\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL,\n\n    //Admin user\n    USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n// Login //\nexport const loginUser = (email, password) => async (dispatch) => {\n    try{\n        dispatch({type: USER_LOGIN_REQUEST})\n\n        const config = {\n            headers:{\n                'Content-type':'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login/',\n                {'username':email, 'password':password},\n                config\n            )\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// Logout //\nexport const logoutUser = () => (dispatch) => {\n    dispatch({\n        type:USER_LOGOUT\n    })\n\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    dispatch({ type: USER_DETAILS_RESET })\n\n    localStorage.removeItem('userInfo')\n}\n\n// Register //\nexport const registerUser = (name, email, password) => async (dispatch) => {\n    try{\n        dispatch({type: USER_REGISTER_REQUEST})\n\n        const config = {\n            headers:{\n                'Content-type':'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/register/',\n                {'name':name, 'email':email, 'password':password},\n                config\n            )\n\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// Details //\nexport const getUserDetails = (userId) => async (dispatch, getState) => {\n    try{\n        dispatch({type: USER_DETAILS_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers:{\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/profile/${userId}`, config)\n\n        dispatch({\n            type:USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    }catch(error){\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// Update user //\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try{\n        dispatch({type: USER_UPDATE_PROFILE_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put('api/users/profile/update/', user, config) //send in 'user' as request.data\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// User List //\nexport const getUserList = () => async (dispatch, getState) => {\n    try{\n        dispatch({type: USER_LIST_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/users/admin/all-users/', config)\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// Delete User //\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try{\n        dispatch({type: USER_DELETE_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/users/admin/delete-user/${id}`, config)\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user, id) => async(dispatch, getState) => {\n    try{\n        dispatch({type: USER_UPDATE_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/admin/update-user/${id}/`, user, config) //send in 'user' as request.data\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS\n        })\n\n    }catch(error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Navbar, Nav, Container, Badge, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useNavigate } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport SearchBox from './SearchBox'\nimport { logoutUser } from '../actions/userActions'\n\n\nfunction Header() {\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const logoutHandler = () => {\n        dispatch(logoutUser())\n        navigate(\"/logout?redirect=\")\n    }\n\n    return (\n        <header>\n           <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n            <Container>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>LokiTech</Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <SearchBox route={''}/>\n                    <Nav className=\"ms-auto\">\n\n                        <LinkContainer to=\"/cart\">\n                            <Nav.Link><i className='fas fa-shopping-cart'></i> Cart <Badge bg=\"success\" pill>{cartItems.length}</Badge></Nav.Link>\n                        </LinkContainer>\n\n                        {\n                            userInfo ? \n                                (\n                                    <NavDropdown title={userInfo.name} id=\"username\" menuVariant=\"dark\">\n                                        <LinkContainer to=\"/profile\">\n                                            <NavDropdown.Item className=\"mt-1 p-2\"><i className='fas fa-user'></i> Profile</NavDropdown.Item>\n                                        </LinkContainer>\n\n                                        <LinkContainer to=\"/profile/orders\">\n                                            <NavDropdown.Item className=\"mt-1 p-2\"><i className=\"fa-solid fa-clipboard\"></i> Orders</NavDropdown.Item>\n                                        </LinkContainer>\n\n\n                                        <NavDropdown.Divider />\n                                        <NavDropdown.Item className=\"mt-1 p-2\" onClick={logoutHandler}><i className=\"fa-solid fa-right-from-bracket\"></i> Logout</NavDropdown.Item>\n                                    </NavDropdown>\n                                )\n                                : \n                                (\n                                    <>\n                                        <LinkContainer to=\"/login\">\n                                            <Nav.Link><i className=\"fa-solid fa-right-to-bracket\"></i> Login</Nav.Link>\n                                        </LinkContainer>\n\n                                        <LinkContainer to=\"/register\">\n                                            <Nav.Link><i className=\"fa-solid fa-user-plus\"></i> Register</Nav.Link>\n                                        </LinkContainer>\n                                    </>\n                                )\n                        }\n                        {\n                            userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id=\"adminmenu\" menuVariant=\"dark\">\n                                    <LinkContainer to=\"/admin/all-users\">\n                                        <NavDropdown.Item className=\"mt-1 p-2\"><i className='fas fa-users'></i> Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to=\"/admin/all-products\">\n                                        <NavDropdown.Item className=\"mt-1 p-2\"><i className='fas fa-list-ul'></i> Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to=\"/admin/all-orders\">\n                                        <NavDropdown.Item className=\"mt-1 p-2\"><i className='fa-solid fa-clipboard'></i> Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3 text-muted'>Copyright &copy; Lok</Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n\n            {/* Looping over 5 times, Each iteration check if it has corresponding star */}\n            {[...Array(5)].map((e, i) => (\n                <span>\n                    <i style={{ color }} className={\n                        value >= (i+1) ? 'bi bi-star-fill'\n                        : value >= (i+0.5) ? 'bi bi-star-half'\n                        : 'bi bi-star'\n                    }>\n                    </i>\n                </span>\n            ))}\n            <span>{ text && text }</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport Rating from './Rating'\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"my-3 p-3 rounded\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f1a545'} />\n                    </div>\n                </Card.Text>\n                <Card.Text as=\"div\">\n                    <h4>${product.price}</h4>\n                </Card.Text>\n\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner \n            animation=\"border\"\n            role=\"status\"\n            style={{ \n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n                }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React, {useState, useEffect} from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children, fade=false }) {\n\n    const [isShowingAlert, setShowingAlert] = useState(true); // For message fading out\n\n    useEffect(() => {\n        if(fade){\n            setTimeout(() => {\n                setShowingAlert(false)\n              }, 3000);\n        }\n    }, [])\n\n    return (\n        <Alert variant={variant} className={ isShowingAlert ? 'alert-shown' : 'alert-hidden' }>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import { useMemo } from 'react';\n\nexport const DOTS = '...'\n\nconst range = (start, end) => {\n    let length = end - start + 1\n\n    return Array.from({ length }, (_, idx) => idx + start)\n}\n\nexport const usePaginate = ({page, pages, pageSize=4, siblingCount = 1 }) => {\n    const paginateRange = useMemo(() => {\n        const totalPageNumbers = siblingCount + 5 //max page numbers show on screen\n\n        //case 1: number of pages needed < page numbers we want to display, then display all page numbers\n        if (pages <= totalPageNumbers) {\n            return range(1, pages)\n        }\n\n        const leftSiblingIndex = Math.max(page - siblingCount, 1)\n        const rightSiblingIndex = Math.min(page + siblingCount, pages)\n\n        const showLeftDots = leftSiblingIndex > 2\n        const showRightDots = rightSiblingIndex < pages - 2\n\n        const firstPageIndex = 1\n        const lastPageIndex = pages\n\n        //case 2: Only show right dots\n        if (!showLeftDots && showRightDots){\n            let leftItemCount = 3 + 2 * siblingCount\n            let leftRange = range(firstPageIndex, leftItemCount)\n\n            return [...leftRange, DOTS, pages]\n        }\n\n        //case 3: Only show left dots\n        if (!showRightDots && showLeftDots){\n            let rightItemCount = 3 + 2 * siblingCount\n            let rightRange = range(pages - rightItemCount + 1, lastPageIndex)\n\n            return [firstPageIndex, DOTS, ...rightRange]\n        }\n\n        //case 4: both left and right DOTS are shown\n        if (showLeftDots && showRightDots){\n            let middleRange = range(leftSiblingIndex, rightSiblingIndex)\n            return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\n        }\n\n    }, [pageSize, siblingCount, page])\n\n    return paginateRange\n}","import React, {useState} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport classnames from 'classnames'\n\nimport '../pagination.css'\nimport Loader from '../components/Loader'\nimport { usePaginate, DOTS } from '../hooks/usePaginate'\n\nfunction Paginate({page, pages, keyword='', siblingCount=1, isAdmin=false}) {\n\n    const paginateRange = usePaginate({page:page, pages:pages})\n    if(keyword){\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return ( !paginateRange ? <Loader /> :\n        <ul className={classnames('pagination-container pagination-bar')}>\n            {/* Left Arrow */}\n            <LinkContainer key=\"prev\" to={!isAdmin ? `/?keyword=${keyword}&page=${page - 1}` : `/admin/all-products/?keyword=${keyword}&page=${page - 1}`}>\n                <li className={classnames('pagination-item', {disabled: page === 1})}>\n                    <i className=\"fa-solid fa-chevron-left\"></i>\n                </li>\n            </LinkContainer>\n\n            {/* Page Numbers & Dots  */}\n            { paginateRange.map(pageNumber => {\n                if(pageNumber === DOTS){\n                    return <li className=\"pagination-item dots\">&#8230;</li>\n                }\n\n                return (\n                    <LinkContainer key={pageNumber} to={!isAdmin ? `/?keyword=${keyword}&page=${pageNumber}` : `/admin/all-products/?keyword=${keyword}&page=${pageNumber}`}>\n                        <li className={classnames('pagination-item', {selected: pageNumber === page})}>\n                            { pageNumber }\n                        </li>\n                    </LinkContainer>\n                )\n            })}\n\n            {/* Right Arrow  */}\n            <LinkContainer key=\"next\" to={!isAdmin ? `/?keyword=${keyword}&page=${page - 1}` : `/admin/all-products/?keyword=${keyword}&page=${page + 1}`}>\n                <li className={classnames('pagination-item', {disabled: page === pages})}>\n                    <i className=\"fa-solid fa-chevron-right\"></i>\n                </li>\n            </LinkContainer>\n        </ul>\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\n\nimport { \n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\n    PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS, PRODUCT_DETAIL_FAIL,\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL,\n\n    //Admin products\n    PRODUCT_LIST_ADMIN_REQUEST, PRODUCT_LIST_ADMIN_SUCCESS, PRODUCT_LIST_ADMIN_FAIL,\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\n\n    //Reviews\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try{\n        dispatch({ type:PRODUCT_LIST_REQUEST })\n\n        const { data } = await axios.get(`/api/products${keyword}`)\n\n        // const { data } = await axios.get(`/api/products`, { \n        //     params: {\n        //         keyword:keyword\n        //     }\n        // })\n\n        dispatch({\n            type:PRODUCT_LIST_SUCCESS,\n            payload: data,\n        })\n    }catch(error){\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n\n        })\n    }\n}\n\nexport const listProductDetail = (id) => async (dispatch) => {\n    try{\n        dispatch({ type:PRODUCT_DETAIL_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${ id }`)\n\n        dispatch({\n            type:PRODUCT_DETAIL_SUCCESS,\n            payload: data,\n        })\n    }catch(error){\n        dispatch({\n            type: PRODUCT_DETAIL_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// List Top 5 products\nexport const listTopProducts = () => async (dispatch) => {\n    try{\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get('/api/products/top/')\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data,\n        })\n\n    } catch(error){\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listProductsAdmin = (keyword = '') => async (dispatch, getState) => {\n    try{\n        dispatch({ type:PRODUCT_LIST_ADMIN_REQUEST })\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/products/admin/all-products${keyword}`, config)\n\n        dispatch({\n            type:PRODUCT_LIST_ADMIN_SUCCESS,\n            payload: data,\n        })\n\n    }catch(error){\n        dispatch({\n            type: PRODUCT_LIST_ADMIN_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n\n        })\n    }\n}\n\n// Create Product //\nexport const createProduct = () => async (dispatch, getState) => {\n    try{\n        dispatch({type: PRODUCT_CREATE_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/products/admin/create/', {}, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// Update Product //\nexport const updateProduct = (product, id) => async (dispatch, getState) => {\n    try{\n        dispatch({type: PRODUCT_UPDATE_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/admin/update-product/${id}/`, product, config)\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS\n        })\n\n    }catch(error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n// Delete Product //\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try{\n        dispatch({type: PRODUCT_DELETE_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/products/admin/delete-product/${id}`, config)\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n            payload: data\n        })\n\n    }catch(error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\n//Create review\nexport const createReview = (id, review) => async (dispatch, getState) => {\n    try{\n        dispatch({type: PRODUCT_CREATE_REVIEW_REQUEST})\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(`/api/products/${id}/review/`, review, config)\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS\n        })\n\n    }catch(error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\n\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nfunction TopProductCarousel() {\n\n    const productTop = useSelector( state => state.productTop)\n    const { error, loading, products } = productTop\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n    return (\n        loading ? <Loader />\n        : error ? <Message variant=\"danger\">{ error }</Message>\n        :(\n            <Carousel pause=\"hover\" variant=\"dark\" className=\"bg-dark\">\n                {products.map(product => (\n                    <Carousel.Item key={product._id}>\n                        <Link to={`/product/${product._id}`}>\n                            <Image src={product.image} alt={product.name} className=\"d-block mx-auto carousel-image\" />\n                            <Carousel.Caption className=\"mx-auto carousel-caption\">\n                                <h6>{product.name} - ${ product.price }</h6>\n                            </Carousel.Caption>\n                        </Link>\n                    </Carousel.Item>\n                ))}\n            </Carousel>\n        )\n    )\n}\n\nexport default TopProductCarousel\n","import React, {useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation } from 'react-router-dom'\nimport { Row, Col, Pagination } from 'react-bootstrap'\n\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport TopProductCarousel from '../components/TopProductCarousel'\n// import BSPaginate from '../components/BSPaginate'\n\nimport { listProducts } from '../actions/productActions'\n\n// const PageSize = 2 // Items to be shown on one page\n\nfunction HomeScreen() {\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const productList = useSelector( state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    // let keyword = location.search ? location.search.split('keyword=')[1] : ''\n    let keyword = location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n    }, [dispatch, keyword])\n\n    return (\n        <div>\n            {!keyword && <TopProductCarousel />}\n            <h1>Latest Products</h1>\n\n            { loading ? <Loader />\n                : error ? <Message variant=\"danger\">{ error }</Message> \n                    :\n                    <div>\n                        <Row>\n                            {\n                                products.map(product => (\n                                    <Col key={ product._id } xs='auto' sm='auto' md={4} lg={4} xl={3}>\n                                        <Product product={product} />\n                                    </Col>\n                                ))\n                            }\n                        </Row>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import { useEffect } from 'react'\n\nconst useScript = (url, id) => {\n    useEffect(() => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = url\n        script.id = id\n        script.async = true\n\n        document.body.appendChild(script)\n\n        return () => {\n            document.body.removeChild(script)\n        }\n    }, [url])\n}\n\nexport default useScript","import axios from \"axios\";\n\nconst googleLogin = async ({ data, access_token }) => {\n    const headers = {\n        Authorization: access_token,\n        'Content-Type': 'application/json'\n    }\n\n    const res = await axios.post('/api/users/google/', data, { headers })\n    return await res.data\n  }\n\nexport default googleLogin;","import React, {useEffect} from 'react'\n\nimport jwt_decode from \"jwt-decode\"\nimport googleLogin from '../services/googleLogin'\n\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env;\n\n//Handle Google Login\nwindow.handleGoogleLogin = async(response) => {\n    const access_token = response.credential //access token\n    const info = jwt_decode(response.credential)\n    const data = {\n        email: info.email,\n        first_name: info.given_name,\n        last_name: info.family_name,\n        aud: info.aud //client id, used to validate with the backend\n    }\n    const userInfo = await googleLogin({ data, access_token })\n    localStorage.setItem('userInfo', JSON.stringify(userInfo)) // save returned user data into localstorage\n    window.location.reload()\n}\n\nfunction GoogleSignIn() {\n\n    return (\n        <div>  \n            <div id=\"g_id_onload\"\n                data-client_id={REACT_APP_GOOGLE_CLIENT_ID}\n                data-login_uri=\"\"\n                data-callback=\"handleGoogleLogin\"\n                data-auto_prompt=\"false\">\n            </div>\n            <div class=\"g_id_signin\"\n                data-type=\"standard\"\n                data-size=\"large\"\n                data-theme=\"outline\"\n                data-text=\"sign_in_with\"\n                data-shape=\"rectangular\"\n                data-logo_alignment=\"left\">\n            </div>\n        </div>\n    )\n}\n\nexport default GoogleSignIn\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ md, children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={md}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState, useEffect} from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport useScript from '../hooks/useScript'\nimport GoogleSignIn from '../components/GoogleSignIn'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { loginUser } from '../actions/userActions'\n\nfunction LoginScreen() {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const location = useLocation()\n    const redirect = location.search ? location.search.split('=')[1] : ''\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo, loading, error } = userLogin\n\n    const [sdkReadyGoogle, setSdkReadyGoogle] = useState(false) // State determine whether the SDK is ready to be mounted\n\n    useScript(\"https://accounts.google.com/gsi/client\", \"google\") // mount google api script\n\n    useEffect(() => {\n        if (userInfo){\n            navigate(`/${redirect}`)\n        }\n        if(window.google){\n            setSdkReadyGoogle(true) //if google api script has mounted, set to true so Google Log In component would appear\n        }\n    }, [navigate, userInfo, redirect])\n\n    const submitLoginHandler = (e) => {\n        e.preventDefault()\n        dispatch(loginUser(email, password)) //Log in the user\n    }\n\n    return (\n        <>\n            <FormContainer md={6}>\n                <h2>Sign In</h2>\n                {error && <Message variant=\"danger\" fade>{error}</Message>}\n                {loading && <Loader />}\n\n                <Form onSubmit={submitLoginHandler} controlId=\"email\">\n                    <Form.Group className=\"my-2\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Username / Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                    </Form.Group>\n                    <Form.Group className=\"my-2\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                    </Form.Group>\n\n                    <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Sign In</Button>\n                </Form>\n\n                <Row className=\"py-3\">\n                    <Col>\n                        Don't have an account? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register here</Link>\n                    </Col>\n                </Row>\n                {\n                    !sdkReadyGoogle ? <Loader />\n                            : \n                            <GoogleSignIn />\n                }\n            </FormContainer>\n        </>\n    )\n}\n\nexport default LoginScreen\n","import React, {useEffect} from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\n\n\nfunction LogoutScreen() {\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const location = useLocation()\n    const navigate = useNavigate()\n    const redirect = location.search ? location.search.split('=')[1] : ''\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            navigate(`/${redirect}`)\n        }, 1500)\n\n        return () => clearTimeout(timeout)\n    }, [])\n\n    return (\n        <div>\n            {\n                userInfo ? <h3>You are not logged out properly</h3>\n                        : <h3>You are now logged out, redirecting to the home page...</h3>\n            }\n        </div>\n    )\n}\n\nexport default LogoutScreen\n","import React, {useState, useEffect} from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport jwt_decode from \"jwt-decode\"\n\nimport useScript from '../hooks/useScript'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { registerUser } from '../actions/userActions'\nimport googleLogin from '../services/googleLogin'\n\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env;\n\n//Handle Google Login\nwindow.handleGoogleLogin = async(response) => {\n    const access_token = response.credential //access token\n    const info = jwt_decode(response.credential)\n    const data = {\n        email: info.email,\n        first_name: info.given_name,\n        last_name: info.family_name,\n        aud: info.aud //client id, used to validate with the backend\n    }\n    const userInfo = await googleLogin({ data, access_token })\n    localStorage.setItem('userInfo', JSON.stringify(userInfo)) // save returned user data into localstorage\n    window.location.reload()\n}\n\nfunction RegisterScreen() {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const navigate = useNavigate()\n    const location = useLocation()\n    const redirect = location.search ? location.search.split('=')[1] : ''\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { userInfo, loading, error } = userRegister\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo:userInfoLogin } = userLogin\n\n    const [sdkReady, setSdkReady] = useState(false) // State determine whether the SDK is ready to be mounted\n\n    useScript(\"https://accounts.google.com/gsi/client\", \"google\") // mount google api script\n\n    useEffect(() => {\n        if(userInfo || userInfoLogin){\n            navigate(`/${redirect}`)\n        }\n        if(window.google){\n            setSdkReady(true) //if google api script has mounted, set to true so Google Log In component would appear\n        }\n    },[navigate, userInfo, redirect])\n\n    const submitRegisterHandler = (e) => {\n        e.preventDefault()\n\n        if(password !== confirmPassword){\n            setMessage('Password does not match')\n        } else{\n            dispatch(registerUser(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer md={6}>\n            <h2>Register</h2>\n            {message && <Message variant=\"danger\" fade>{message}</Message>}\n            {error && <Message variant=\"danger\" fade>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitRegisterHandler}>\n                <Form.Group className=\"my-2\" controlid=\"password\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"name\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} required />\n                </Form.Group>\n                <Form.Group className=\"my-2\" controlid=\"password\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Username / Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                </Form.Group>\n\n                <Form.Group className=\"my-2\" controlid=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n                </Form.Group>\n\n                <Form.Group className=\"my-2\" controlid=\"passwordConfirm\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} required />\n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Register</Button>\n\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Already have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log in here</Link>\n                </Col>\n            </Row>\n            {\n                !sdkReady ? <Loader />\n                        : \n                        <div>  \n                            <div id=\"g_id_onload\"\n                                data-client_id={REACT_APP_GOOGLE_CLIENT_ID}\n                                data-login_uri=\"\"\n                                data-callback=\"handleGoogleLogin\"\n                                data-auto_prompt=\"false\">\n                            </div>\n                            <div class=\"g_id_signin\"\n                                data-type=\"standard\"\n                                data-size=\"large\"\n                                data-theme=\"outline\"\n                                data-text=\"sign_in_with\"\n                                data-shape=\"rectangular\"\n                                data-logo_alignment=\"left\">\n                            </div>\n                        </div>\n            }\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction ProfileHeader() {\n    return (\n        <div>\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            \n                            <LinkContainer to=\"/profile\">\n                                <Nav.Link><i className='fas fa-user'></i> User Profile</Nav.Link>\n                            </LinkContainer>\n\n                            <LinkContainer to=\"/profile/orders\">\n                                <Nav.Link><i className=\"fa-solid fa-clipboard\"></i> Orders</Nav.Link>\n                            </LinkContainer>\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default ProfileHeader\n","import React, {useState, useEffect} from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport ProfileHeader from '../components/ProfileHeader'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nfunction ProfileScreen() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [messageSuccess, setMessageSuccess] = useState('')\n\n    const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { user, loading, error } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    useEffect(() => {\n        if (!userInfo){\n            navigate(\"/login?redirect=profile\")\n        }else {\n            if (!user || !user.name || user._id !== userInfo._id || success) {\n                if(success) { setMessageSuccess('Your profile has been updated') }\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails(userInfo._id))\n            } else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, userInfo, user, navigate, success])\n\n    const submitUpdateHandler = (e) => {\n        e.preventDefault()\n\n        if(password !== confirmPassword){\n            setMessage('Password does not match')\n        } else{\n            dispatch(updateUserProfile({'name': name, 'email': email, 'password': password}))\n            setMessage('')\n        }\n\n    }\n\n    return (\n        <div>\n            <ProfileHeader />\n            <Container>\n                <Row>\n                    <Col md={6}>\n                        <h2>Your Information</h2>\n                        {messageSuccess && <Message variant=\"success\">{messageSuccess}</Message>}\n                        {message && <Message variant=\"danger\">{message}</Message>}\n                        {error && <Message variant=\"danger\">{error}</Message>}\n                        {loading && <Loader />}\n                        <Form onSubmit={submitUpdateHandler}>\n                            <Form.Group className=\"my-2\" controlId=\"email\">\n                                <Form.Label>Username / Email</Form.Label>\n                                <Form.Control type=\"email\" value={email} plaintext readOnly required />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlId=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"name\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} required />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlId=\"password\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlId=\"passwordConfirm\">\n                                <Form.Label>Confirm Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Update</Button>\n\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import { \n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL,\n    ORDER_PAY_CANCEL_REQUEST, ORDER_PAY_CANCEL_SUCCESS, ORDER_PAY_CANCEL_FAIL,\n    ORDER_CREATE_REQUEST_DEMO, ORDER_CREATE_SUCCESS_DEMO, ORDER_CREATE_FAIL_DEMO, //Demo \n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL,\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL,\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL\n} from '../constants/orderConstants'\n\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nimport axios from 'axios'\n\nexport const createOrder = (order) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        })\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post('api/orders/add/', order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('currentOrder', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n// Create order Demo\nexport const createOrderDemo = (order) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_CREATE_REQUEST_DEMO,\n        })\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post('api/orders/add/', order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS_DEMO,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL_DEMO,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const { userLogin: {userInfo} } = getState()\n        const authorization = userInfo ? `Bearer ${userInfo.token}` : \"\"\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: authorization\n            }\n        }\n\n        const { data } = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error){\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n// Set order to pay\nexport const payOrder = (id, paymentResult) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/orders/${id}/pay/`, paymentResult, config)\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n    } catch (error){\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n\nexport const payOrderCancel = (id) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_PAY_CANCEL_REQUEST\n        })\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/orders/cancel-order/${id}`, config)\n\n        dispatch({\n            type: ORDER_PAY_CANCEL_SUCCESS,\n            payload: data\n        })\n    } catch (error){\n        dispatch({\n            type: ORDER_PAY_CANCEL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n//set order to delivered\nexport const deliverOrder = (id) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const { userLogin: {userInfo} } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/orders/${id}/deliver/`, {}, config)\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n        })\n\n    } catch (error){\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n// List my orders\nexport const getMyOrders = () => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        })\n\n        const { userLogin: {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/orders/myorders', config)\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n    } catch (error){\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message\n        })\n    }\n\n}\n\n// Admin List all orders\nexport const getOrders = () => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        })\n\n        const { userLogin: {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/orders/admin/all-orders', config)\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error){\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message\n        })\n    }\n\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Container, Table, Button} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useNavigate } from 'react-router-dom'\n\nimport ProfileHeader from '../components/ProfileHeader'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nimport { getMyOrders } from '../actions/orderActions'\n\nfunction PastOrdersScreen() {\n\n    const myOrders = useSelector(state => state.myOrders)\n    const { orders, loading, error } = myOrders\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    \n    useEffect(() => {\n        if(!userInfo){ //Take user to log in page if not logged in\n            navigate('/login?redirect=profile/orders')\n        }\n        else{\n            dispatch(getMyOrders())\n        }\n    }, [])\n\n    return (\n        <div>\n            <ProfileHeader />\n            <Container>\n                <h2>Past Orders</h2>\n                { error && <Message variant=\"danger\">{error}</Message>}\n                { loading && <Loader /> }\n                {\n                    orders && \n                        (\n                            <Table striped responsive className=\"table-sm\">\n                                <thead>\n                                    <tr>\n                                        <th>Order#</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    { orders.map(order => (\n                                        <tr>\n                                            <td>{ String(order._id).padStart(5, '0') }</td>\n                                            <td>{ order.created_date.substr(0, 10) }</td>\n                                            <td>${ order.total_price }</td>\n                                            <td>{ order.isPaid ? order.paid_date.substr(0, 10) : ( <i className=\"fas fa-times\" style={{ color:'red' }}></i> ) }</td>\n                                            <td>{ order.isDelivered ? order.deliverd_date : 'In progress' }</td>\n                                            <td>\n                                                <LinkContainer to={`/orders/${order._id}`}>\n                                                    <Button className=\"btn-sm\">Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )\n                }\n                {/* <ListGroup variant=\"flush\">\n                    { orders && \n                        orders.map(order => (\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        <LinkContainer to={`/orders/${order._id}`}>{ String(order._id).padStart(10, '0') }</LinkContainer>\n                                    </Col>\n\n                                    <Col>\n\n                                    </Col>\n\n                                    <Col>\n                                        {order.isPaid ? 'Paid' : 'Not Paid'}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))\n                    }\n                </ListGroup> */}\n            </Container>\n        </div>\n    )\n}\n\nexport default PastOrdersScreen\n","import axios from 'axios'\nimport { CART_ADD_ITEM, CART_UPDATE_ITEM, CART_REMOVE_ITEM, CART_VALIDATION_MESSAGE} from '../constants/cartConstants'\nimport { CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CALCULATE_PRICE } from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload:{\n            productId:data._id,\n            name:data.name,\n            image:data.image,\n            price:data.price,\n            countInStock:data.countInStock,\n            qty: Number(qty),\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const updateCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n    const upQty = data.countInStock === 0 ? 0 \n            : data.countInStock < Number(qty) ? data.countInStock\n            : Number(qty)\n\n    dispatch({\n        type: CART_UPDATE_ITEM,\n        payload:{\n            productId:data._id,\n            name:data.name,\n            image:data.image,\n            price:data.price,\n            countInStock:data.countInStock,\n            qty: upQty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const cartValidationMessage = (message) => (dispatch, getState) => {\n    dispatch({\n        type: CART_VALIDATION_MESSAGE,\n        payload: message,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\nexport const calculatePrice = () => (dispatch) => {\n    dispatch({\n        type: CART_CALCULATE_PRICE\n    })\n}","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport {Rating as SimpleRating} from 'react-simple-star-rating'\n\nimport { listProductDetail, createReview } from '../actions/productActions'\nimport { addToCart } from '../actions/cartActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProductScreen() {\n    const { id } = useParams()\n\n    const [qty, setQty] = useState(1) // Local state for quantity\n    const [rating, setRating] = useState(0) // rating\n    const [comment, setComment] = useState('') // review comment\n\n    const dispatch = useDispatch() //Create dispatch\n\n    const productDetail = useSelector(state => state.productDetail) // Product Detail state\n    const { error, loading, product } = productDetail\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const reviewCreate = useSelector(state => state.reviewCreate)\n    const { loading: loadingReview, success: successReview, error: errorReview } = reviewCreate\n\n    const cart = useSelector(state => state.cart) //grab the cart state for cart message\n    const { message } = cart\n\n    useEffect(() => {\n        dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n        if(successReview){\n            setRating(0)\n            setComment('')\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\n        }\n        dispatch(listProductDetail(id))\n\n    }, [dispatch, id, successReview])\n\n    const addToCartHandler = (productId) => { // Add to cart function\n        dispatch(addToCart(productId, qty))\n    }\n\n    const createReviewHandler = (e) => {\n        e.preventDefault()\n        dispatch(createReview(id, {'rating': rating/20, 'comment': comment}))\n    }\n\n    return (\n        <div>\n            {/* Breadcrumb */}\n            <section id=\"bc\" className=\"my-3\">\n                <div>\n                    <nav>\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <Link to=\"/\">Home</Link>\n                            </li>\n                            <li className=\"breadcrumb-item active\">\n                                { \n                                    product.name \n                                }\n                            </li>\n                        </ol>\n                    </nav>\n                </div>\n            </section>\n            \n            {/* Message section for adding item to cart */}\n            {\n                message && <Message variant=\"primary\">{message}</Message>\n            }\n\n\n            {\n                //Loading Spinner\n                loading ? <Loader />\n                        : error ? <Message variant=\"danger\">{ error }</Message>\n                        :\n                        <div>\n                            {/* Product Details */}\n                            <Row>\n                                <Col md={4}>\n                                    {\n                                        <Image src={product.image} alt={product.name} fluid />\n                                    }\n                                </Col>\n\n                                <Col md={5}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{ product.name }</h3>\n                                            <div className=\"right-rating\">\n                                                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f1a545'} />\n                                            </div>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <h3>${ product.price }</h3>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <h5 className=\"text-secondary\">Description</h5>\n                                            { product.description }\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant=\"flush\">\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        <strong>{ product.countInStock >= 6 ? 'In Stock'\n                                                                : product.countInStock >0 ? 'Only A Few Left'\n                                                                : 'Sold Out'}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            { product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className=\"my-1\">\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value) }\n                                                            >\n                                                                {\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n                                            <ListGroup.Item>\n                                                <div className=\"d-grid gap-2 my-1\">\n                                                    {\n                                                        product.countInStock > 0 ? //check if instock\n                                                            <Button variant=\"primary\" type=\"button\" size=\"lg\" onClick={() => addToCartHandler(product._id)}>\n                                                                Add To Cart\n                                                            </Button>\n                                                            : //out of stock\n                                                            <Button variant=\"secondary\" type=\"button\" size=\"lg\" disabled> \n                                                                Out Of Stock\n                                                            </Button>\n                                                    }\n                                                </div>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <hr className=\"my-5\" />\n                            {/* Product Reviews */}\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                        { product.reviews.length === 0 && \n                                            <ListGroup>\n                                                <ListGroup.Item>\n                                                    <p className=\"text-muted\">No reviews</p>\n                                                </ListGroup.Item>\n                                            </ListGroup>\n                                        }\n\n                                        <ListGroup variant=\"flush\">\n                                            {\n                                                product.reviews.map((review) => (\n                                                    <ListGroup.Item key={review._id}>\n                                                        <strong>{review.name}</strong>\n                                                        <Rating value={review.rating} text={` ${review.created_at.substr(0, 10)}`} color={'#f1a545'} />\n                                                        <p>{ review.comment }</p>\n                                                    </ListGroup.Item>\n                                                ))\n                                            }\n\n                                            <ListGroup.Item>\n                                                <h5>Write a review</h5>\n\n                                                {loadingReview && <Loader />}\n                                                {successReview && <Message variant=\"info\">Review posted</Message>}\n                                                {errorReview && <Message variant=\"warning\">{errorReview}</Message>}\n\n                                                <Form onSubmit={createReviewHandler}>\n                                                    { userInfo ? (\n                                                        <>\n                                                        <Form.Group controlId='rating'>\n                                                            <SimpleRating\n                                                                onClick={(rating) => setRating(rating)}\n                                                                ratingValue={rating}\n                                                                size={20}\n                                                                fillColor='#f1a545'\n                                                                emptyColor='#cccccc'\n                                                                allowHalfIcon\n                                                                showTooltip\n                                                                tooltipArray={['Poor', 'Poor', 'Fair', 'Fair', 'Good', 'Good', 'Very Good', 'Very Good', 'Excellent', 'Excellent']}\n                                                                disabled={loadingReview}\n                                                            />\n                                                        </Form.Group>\n                                                        <Form.Group controlId='comment'>\n                                                            <Form.Label>Review</Form.Label>\n                                                            <Form.Control disabled={loadingReview} as=\"textarea\" row=\"5\" placeholder='Share your thoughts on this product' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\n                                                        </Form.Group>\n                                                        <Button type=\"submit\" variant=\"primary\" className=\"my-2\" disabled={loadingReview}>Post review</Button>\n                                                        </>\n                                                    ) : (\n                                                        <p className=\"p-2\">\n                                                            Please <Link to={`/login?redirect=product/${id}`}>login</Link> to write a review\n                                                        </p>\n                                                    )}\n                                                </Form>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                </Col>\n\n                                <Col>\n                                \n                                </Col>\n                            </Row>\n                        </div>\n            }\n        </div>\n    )\n}\n\nexport default ProductScreen\n","import React, { useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Pagination } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport SearchBox from '../components/SearchBox'\nimport { listProductsAdmin, createProduct, deleteProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen() {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productListAdmin = useSelector(state => state.productListAdmin)\n    const { products, loading, error, pages, page } = productListAdmin\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { product, success:successCreate, loading:loadingCreate, error:errorCreate } = productCreate\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { success:successDelete, loading:loadingDelete, error:errorDelete, message:messageDelete } = productDelete\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    let keyword = location.search\n\n    useEffect(() => {\n        dispatch({ type:PRODUCT_CREATE_RESET })\n        if(userInfo){\n            if(!userInfo.isAdmin){\n                navigate('/')\n            }\n\n            if(successCreate){\n                navigate(`/admin/product/${product._id}/edit`)\n            } else{\n                dispatch(listProductsAdmin(keyword))\n            }\n        } else{\n            navigate('/login?redirect=admin/all-products')\n        }\n    }, [dispatch, navigate, userInfo, successDelete, successCreate, product, keyword])\n\n    const deleteHandler = (id, name) => {\n        if(window.confirm(`Deleting product: ${name}`)){\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () =>{\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <h2>Products</h2>\n                </Col>\n                <Col className=\"d-flex my-3\">\n                    { loadingCreate ? <Loader />\n                                    :\n                                    <Button className=\"ms-auto\" onClick={createProductHandler}>\n                                        <i className=\"fas fa-plus\"></i> Create Product\n                                    </Button>\n                    }\n                </Col>\n            </Row>\n\n            <div className=\"col-md-3 mb-3\">\n                <SearchBox route={'/admin/all-products'} />\n            </div>\n            \n            { error && <Message variant=\"danger\">{error}</Message>}\n\n            { loadingDelete && <Loader /> }\n            { errorDelete && <Message variant=\"danger\" fade>{errorDelete}</Message>}\n            { messageDelete && <Message variant=\"primary\" fade>{messageDelete}</Message>}\n\n            { errorCreate && <Message variant=\"danger\" fade>{errorCreate}</Message>}\n\n            { loading && <Loader /> }\n            { products && \n                (\n                    <div>\n                        <Table striped responsive bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Name</th>\n                                    <th>Brand</th>\n                                    <th>Category</th>\n                                    <th>Price</th>\n                                    <th>Rating</th>\n                                    <th>Is published</th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                { products.map(product => (\n                                    <tr key={product._id}>\n                                        <td>{ String(product._id).padStart(5, '0') }</td>\n                                        <td>{ product.name }</td>\n                                        <td>{ product.brand }</td>\n                                        <td>{ product.category }</td>\n                                        <td>{ product.price }</td>\n                                        <td>{ product.rating }</td>\n                                        <td>{ product.isPublished ? 'Yes' : 'No' }</td>\n                                        <td>\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                <Button variant=\"light\" className=\"btn-sm\"><i className=\"fas fa-edit\"></i></Button>\n                                            </LinkContainer>\n                                        </td>\n                                        <td><Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id, product.name)}><i className=\"fas fa-trash\"></i></Button></td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                        <Paginate page={page} pages={pages} isAdmin={true} />\n                    </div>\n                )\n            }\n        </div>\n    )\n}\n\nexport default ProductListScreen","import React, {useState, useEffect} from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetail, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET, PRODUCT_DETAIL_RESET } from '../constants/productConstants'\n\nfunction ProductEditScreen() {\n\n    const { id:productId } = useParams()\n\n    const [name, setName] = useState('')\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState(0)\n    const [countInStock, setCountInStock] = useState(0)\n    const [isPublished, setIsPublished] = useState(false)\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productDetail = useSelector(state => state.productDetail)\n    const { product, loading, error } = productDetail\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\n\n    useEffect(() => {\n        if(userInfo){\n            if(!userInfo.isAdmin){\n                navigate('/')\n            } \n            if(successUpdate){\n                dispatch({ type: PRODUCT_UPDATE_RESET })\n                dispatch({ type: PRODUCT_DETAIL_RESET })\n                navigate('/admin/all-products')\n            }else{\n                if(!product || product._id !== Number(productId)){\n                    dispatch(listProductDetail(productId))\n                } else{\n                    setName(product.name)\n                    setImage(product.image)\n                    setBrand(product.brand)\n                    setCategory(product.category)\n                    setDescription(product.description)\n                    setPrice(product.price)\n                    setCountInStock(product.countInStock)\n                    setIsPublished(product.isPublished)\n                }\n            }\n        } else{\n            navigate('/login?redirect=admin/all-users')\n        }\n    },[product, productId, successUpdate])\n\n    const submitUpdateHandler = (e) => {\n        e.preventDefault()\n        const productToUpdate = {\n            'name':name,\n            'brand':brand,\n            'category':category,\n            'description':description,\n            'price':price,\n            'countInStock':countInStock,\n            'isPublished':isPublished,\n        }\n        dispatch(updateProduct(productToUpdate, product._id))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('productId', productId)\n\n        setUploading(true)\n\n        try{\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const {data} = await axios.post(`/api/products/admin/upload/`, formData, config)\n\n            setImage(data)\n            setUploading(false)\n\n        } catch(error){\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            {/* Breadcrumb */}\n            <section id=\"bc\" className=\"my-3\">\n                <div>\n                    <nav>\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <Link to=\"/admin/all-products\">Go back</Link>\n                            </li>\n                            <li className=\"breadcrumb-item active\">\n                                { productId } - { product.name }\n                            </li>\n                        </ol>\n                    </nav>\n                </div>\n            </section>\n            <FormContainer md={6}>\n                <h2>Edit Product</h2>\n                {loading && <Loader />}\n                {errorUpdate && <Message variant=\"danger\" fade>{ errorUpdate }</Message>}\n                {\n                    error ? <Message variant=\"danger\">{error}</Message>\n                        :\n                        <Form onSubmit={submitUpdateHandler}>\n                            <Form.Group className=\"my-2\" controlid=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"name\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"image\">\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Image\" value={image} onChange={(e) => setImage(e.target.value)} />\n                                \n                                <Form.Control type='file' id='image-file' label='Choose File' custom onChange={uploadFileHandler}>\n                                </Form.Control>\n                                { uploading && <Loader /> }\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"brand\">\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control type=\"text\" value={brand} onChange={(e) => setBrand(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"category\">\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control type=\"text\" value={category} onChange={(e) => setCategory(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"description\">\n                                <Form.Label>Desription</Form.Label>\n                                <Form.Control as=\"textarea\" value={description} rows={6} size=\"sm\" onChange={(e) => setDescription(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"price\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control type=\"number\" value={price} onChange={(e) => setPrice(Number(e.target.value))} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"countInStock\">\n                                <Form.Label>Count In Stock</Form.Label>\n                                <Form.Control type=\"number\" value={countInStock} onChange={(e) => setCountInStock(Number(e.target.value))} />\n                            </Form.Group>\n        \n                            <Form.Group className=\"my-2\" controlid=\"isPublished\">\n                                <Form.Check type=\"checkbox\" label=\"Published\" checked={ isPublished } onChange={(e) => setIsPublished(e.target.checked)} />\n                            </Form.Group>\n        \n                            { loadingUpdate || uploading ? <Loader />\n                                            : <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Update</Button> }\n        \n                        </Form>\n                }\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default ProductEditScreen\n","import React from 'react'\nimport { Row, Col, Accordion, ListGroup } from 'react-bootstrap'\n\nfunction CartSummaryAccordion({items, subtotalPrice, shippingPrice, taxPrice, totalPrice}) {\n\n    const subPrice = subtotalPrice ? Number(subtotalPrice) : Number(items.reduce((acc, cartItem) => acc + Number(cartItem.qty) * cartItem.price, 0).toFixed(2))\n    const sPrice = shippingPrice ? Number(shippingPrice) : 0\n    const tPrice = taxPrice ? Number(taxPrice) : 0\n    const totPrice = (Number(subPrice) + Number(sPrice) + Number(tPrice)).toFixed(2)\n\n    return (\n        <div>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item> {/**Total number of items */}\n                    <h4>Order Summary</h4>\n                </ListGroup.Item>\n\n                <Accordion defaultActiveKey=\"0\" flush>\n                    <Accordion.Item>\n                        <Accordion.Header eventkey=\"0\">\n                            Cart\n                        </Accordion.Header>\n                        <Accordion.Body eventkey=\"0\">\n                                <>\n                                    {\n                                        items.map(cartItem => (\n                                            <div key={ `summary-${cartItem.productId}` }>\n                                                <Row className=\"mb-2\">\n                                                    <Col md={8} style={{fontSize:\"11px\"}}> {/**Item name and qty */}\n                                                        {cartItem.qty} &times; {cartItem.name}\n                                                    </Col>\n\n                                                    <Col md={4} sm=\"auto\" style={{fontSize:\"11px\"}} className=\"d-flex\">\n                                                        <p className=\"ms-auto\">${(cartItem.price * cartItem.qty).toFixed(2)}</p>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        ))\n                                    }\n                                </>\n                        </Accordion.Body>\n                    </Accordion.Item>\n                </Accordion>\n\n                <ListGroup.Item className=\"m-0 p-0\"></ListGroup.Item>\n    \n                <ListGroup.Item>\n                    <Row>\n                        <Col md={8}>\n                            Subtotal\n                        </Col>\n\n                        <Col md={4} sm=\"auto\" className=\"d-flex\">\n                            <p className=\"ms-auto\">${ subPrice }</p>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                    <Row>\n                        <Col md={8}>\n                            Shipping\n                        </Col>\n\n                        <Col md={4} sm=\"auto\" className=\"d-flex\">\n                            <p className=\"ms-auto\">${ sPrice.toFixed(2)}</p>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                    <Row>\n                        <Col md={6}>\n                            Tax\n                        </Col>\n\n                        <Col md={6} sm=\"auto\" className=\"d-flex\">\n                            <p className={ taxPrice ? \"ms-auto\" : \"text-muted ms-auto\"}>{ tPrice ? `$${tPrice.toFixed(2)}` : 'Calculated in checkout'}</p>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n\n                {/* Estimated total */}\n                <ListGroup.Item> \n                    <Row>\n                        <Col md={8}>\n                            Estimated Total\n                        </Col>\n\n                        <Col md={4} sm=\"auto\" className=\"d-flex\">\n                            <p className=\"ms-auto\">${ totPrice }</p>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default CartSummaryAccordion\n","import React, { useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button } from 'react-bootstrap'\n\nimport Message from '../components/Message'\nimport CartSummaryAccordion from '../components/CartSummaryAccordion'\nimport { updateCart, removeFromCart, cartValidationMessage } from '../actions/cartActions'\n\n\n\nfunction CartScreen() {\n\n    const navigate = useNavigate() // create navigate\n\n    const dispatch = useDispatch()\n    const cart = useSelector( state => state.cart )\n    const { cartItems, message } = cart\n\n    const user = useSelector( state => state.userLogin)\n    const { userInfo } = user\n\n    // Validate cart status'\n    const validateCartStatus = () => {\n        cartItems.map(cartItem => {\n            dispatch(updateCart(cartItem.productId, cartItem.qty))\n            if (cartItem.qty === 0) {\n                if(!message){\n                    dispatch(cartValidationMessage(\"Items with zero quantity have been removed from your cart\"))\n                }\n                dispatch(removeFromCart(cartItem.productId))\n            }\n        })\n    }\n\n    useEffect(() => {\n        // Update Items in-stock status when the page first loaded \n        cartItems.map(cartItem => {\n            dispatch(updateCart(cartItem.productId, cartItem.qty))\n        })\n    }, [])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = (checkoutMethod) => {\n        validateCartStatus()\n        if(checkoutMethod === 'member'){\n            navigate('/login?redirect=shipping')\n        }\n        if(checkoutMethod === 'guest'){\n            navigate('/shipping')\n        }\n    }\n\n    return (\n        <div>\n            {  message && <Message variant=\"primary\">{message}</Message> }\n            <Row>\n                <h2>Shopping Cart</h2>\n                {/* Cart Items */}\n                <Col md={8}> \n                    { cartItems.length === 0 ? (\n                        <Message variant=\"info\">\n                            Your cart is empty, <Link to=\"/\">Contiune Shopping</Link>\n                        </Message>\n                    ) : (\n                        <ListGroup variant=\"flush\">\n                            {cartItems.map( cartItem => (\n                                <ListGroup.Item key={ cartItem.productId }>\n                                    <Row>\n                                        {/*Item image */}\n                                        <Col md={3}>\n                                            <Link to={`/product/${cartItem.productId}`}>\n                                                <Image src={ cartItem.image } alt={ cartItem.name } fluid rounded/>\n                                            </Link>\n                                        </Col>\n\n                                        <Col md={9}>\n                                            <Row>\n                                                <Col md={8} sm={12}>\n                                                    <Link to={`/product/${cartItem.productId}`}>{cartItem.name}</Link>\n                                                </Col>\n\n                                                <Col md={4} sm={12} className=\"d-flex\">\n                                                    <p className=\"ms-auto\">${(cartItem.price * cartItem.qty).toFixed(2)}</p>\n                                                </Col>\n                                            </Row>\n\n                                            <Row>\n                                                <Col md={8} sm={12}>\n                                                    { cartItem.countInStock > 0 ? <p className=\"text-primary\">In Stock</p> : <p className=\"text-muted\">Out of Stock</p> }\n                                                </Col>\n\n                                                <Col md={4} sm={12}>\n                                                    {\n                                                        cartItem.countInStock > 0 ?\n                                                            //In stock\n                                                            <Form.Select \n                                                                aria-label=\"Select Quantity\" \n                                                                as=\"select\" \n                                                                className=\"py-0\"\n                                                                value={cartItem.qty} \n                                                                onChange={(e) => dispatch(updateCart(cartItem.productId, e.target.value)) }\n                                                            >  \n                                                                <option key={0} value={0}>0</option>\n                                                                { [...Array(cartItem.countInStock).keys()].map((x) => (\n                                                                    <option key={x + 1} value={x + 1}>\n                                                                        {x + 1}\n                                                                    </option>\n                                                                )) }\n                                                            </Form.Select>\n                                                        : //out of stock \n                                                            <Form.Select\n                                                                aria-label=\"Select Quantity\" \n                                                                as=\"select\" \n                                                                className=\"py-0\"\n                                                                value={0}\n                                                                disabled\n                                                            >\n                                                                <option key={0} value={0}>0</option>\n                                                            </Form.Select>\n                                                    }\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col className=\"d-flex\">\n                                                    <Button size=\"sm\" type=\"button\" variant=\"light\" className=\"ms-auto mt-2\" onClick={() => removeFromCartHandler(cartItem.productId)}>\n                                                        Remove\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n\n                                </ListGroup.Item>\n                            ))}\n\n                            <ListGroup.Item className=\"ms-auto\">\n                                {\n                                    userInfo ? \n                                        <Button type='button'\n                                            size=\"md\"\n                                            className=\"my-2\"\n                                            disabled={cartItems.length === 0}\n                                            onClick={() => checkoutHandler('member')}\n                                        >\n                                            Checkout\n                                        </Button>\n                                        : \n                                        <>\n                                            {/* <Button \n                                                type='button'\n                                                size=\"md\"\n                                                className=\"m-2\"\n                                                disabled={cartItems.length === 0}\n                                                onClick={() => checkoutHandler('guest')}\n                                            >\n                                                Guest Checkout\n                                            </Button> */}\n\n                                            <Button \n                                                type='button'\n                                                size=\"md\"\n                                                className=\"m-2\"\n                                                disabled={cartItems.length === 0}\n                                                onClick={() => checkoutHandler('member')}\n                                            >\n                                                Member Checkout\n                                            </Button>\n                                        </>\n                                }\n                                {/* <Button \n                                    type='button'\n                                    size=\"lg\"\n                                    className=\"my-2\"\n                                    disabled={cartItems.length === 0}\n                                    onClick={() => checkoutHandler()}\n                                >\n                                    Checkout\n                                </Button> */}\n                            </ListGroup.Item>\n                        </ListGroup>\n                    )}\n                </Col>\n                {/* Cart Summary */}\n                <Col md={4}>\n                   <CartSummaryAccordion items={cartItems} />\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default CartScreen\n","const STATES = [\n    {\n        \"name\": \"Alabama\",\n        \"abbreviation\": \"AL\"\n    },\n    {\n        \"name\": \"Alaska\",\n        \"abbreviation\": \"AK\"\n    },\n    {\n        \"name\": \"American Samoa\",\n        \"abbreviation\": \"AS\"\n    },\n    {\n        \"name\": \"Arizona\",\n        \"abbreviation\": \"AZ\"\n    },\n    {\n        \"name\": \"Arkansas\",\n        \"abbreviation\": \"AR\"\n    },\n    {\n        \"name\": \"California\",\n        \"abbreviation\": \"CA\"\n    },\n    {\n        \"name\": \"Colorado\",\n        \"abbreviation\": \"CO\"\n    },\n    {\n        \"name\": \"Connecticut\",\n        \"abbreviation\": \"CT\"\n    },\n    {\n        \"name\": \"Delaware\",\n        \"abbreviation\": \"DE\"\n    },\n    {\n        \"name\": \"District Of Columbia\",\n        \"abbreviation\": \"DC\"\n    },\n    {\n        \"name\": \"Federated States Of Micronesia\",\n        \"abbreviation\": \"FM\"\n    },\n    {\n        \"name\": \"Florida\",\n        \"abbreviation\": \"FL\"\n    },\n    {\n        \"name\": \"Georgia\",\n        \"abbreviation\": \"GA\"\n    },\n    {\n        \"name\": \"Guam\",\n        \"abbreviation\": \"GU\"\n    },\n    {\n        \"name\": \"Hawaii\",\n        \"abbreviation\": \"HI\"\n    },\n    {\n        \"name\": \"Idaho\",\n        \"abbreviation\": \"ID\"\n    },\n    {\n        \"name\": \"Illinois\",\n        \"abbreviation\": \"IL\"\n    },\n    {\n        \"name\": \"Indiana\",\n        \"abbreviation\": \"IN\"\n    },\n    {\n        \"name\": \"Iowa\",\n        \"abbreviation\": \"IA\"\n    },\n    {\n        \"name\": \"Kansas\",\n        \"abbreviation\": \"KS\"\n    },\n    {\n        \"name\": \"Kentucky\",\n        \"abbreviation\": \"KY\"\n    },\n    {\n        \"name\": \"Louisiana\",\n        \"abbreviation\": \"LA\"\n    },\n    {\n        \"name\": \"Maine\",\n        \"abbreviation\": \"ME\"\n    },\n    {\n        \"name\": \"Marshall Islands\",\n        \"abbreviation\": \"MH\"\n    },\n    {\n        \"name\": \"Maryland\",\n        \"abbreviation\": \"MD\"\n    },\n    {\n        \"name\": \"Massachusetts\",\n        \"abbreviation\": \"MA\"\n    },\n    {\n        \"name\": \"Michigan\",\n        \"abbreviation\": \"MI\"\n    },\n    {\n        \"name\": \"Minnesota\",\n        \"abbreviation\": \"MN\"\n    },\n    {\n        \"name\": \"Mississippi\",\n        \"abbreviation\": \"MS\"\n    },\n    {\n        \"name\": \"Missouri\",\n        \"abbreviation\": \"MO\"\n    },\n    {\n        \"name\": \"Montana\",\n        \"abbreviation\": \"MT\"\n    },\n    {\n        \"name\": \"Nebraska\",\n        \"abbreviation\": \"NE\"\n    },\n    {\n        \"name\": \"Nevada\",\n        \"abbreviation\": \"NV\"\n    },\n    {\n        \"name\": \"New Hampshire\",\n        \"abbreviation\": \"NH\"\n    },\n    {\n        \"name\": \"New Jersey\",\n        \"abbreviation\": \"NJ\"\n    },\n    {\n        \"name\": \"New Mexico\",\n        \"abbreviation\": \"NM\"\n    },\n    {\n        \"name\": \"New York\",\n        \"abbreviation\": \"NY\"\n    },\n    {\n        \"name\": \"North Carolina\",\n        \"abbreviation\": \"NC\"\n    },\n    {\n        \"name\": \"North Dakota\",\n        \"abbreviation\": \"ND\"\n    },\n    {\n        \"name\": \"Northern Mariana Islands\",\n        \"abbreviation\": \"MP\"\n    },\n    {\n        \"name\": \"Ohio\",\n        \"abbreviation\": \"OH\"\n    },\n    {\n        \"name\": \"Oklahoma\",\n        \"abbreviation\": \"OK\"\n    },\n    {\n        \"name\": \"Oregon\",\n        \"abbreviation\": \"OR\"\n    },\n    {\n        \"name\": \"Palau\",\n        \"abbreviation\": \"PW\"\n    },\n    {\n        \"name\": \"Pennsylvania\",\n        \"abbreviation\": \"PA\"\n    },\n    {\n        \"name\": \"Puerto Rico\",\n        \"abbreviation\": \"PR\"\n    },\n    {\n        \"name\": \"Rhode Island\",\n        \"abbreviation\": \"RI\"\n    },\n    {\n        \"name\": \"South Carolina\",\n        \"abbreviation\": \"SC\"\n    },\n    {\n        \"name\": \"South Dakota\",\n        \"abbreviation\": \"SD\"\n    },\n    {\n        \"name\": \"Tennessee\",\n        \"abbreviation\": \"TN\"\n    },\n    {\n        \"name\": \"Texas\",\n        \"abbreviation\": \"TX\"\n    },\n    {\n        \"name\": \"Utah\",\n        \"abbreviation\": \"UT\"\n    },\n    {\n        \"name\": \"Vermont\",\n        \"abbreviation\": \"VT\"\n    },\n    {\n        \"name\": \"Virgin Islands\",\n        \"abbreviation\": \"VI\"\n    },\n    {\n        \"name\": \"Virginia\",\n        \"abbreviation\": \"VA\"\n    },\n    {\n        \"name\": \"Washington\",\n        \"abbreviation\": \"WA\"\n    },\n    {\n        \"name\": \"West Virginia\",\n        \"abbreviation\": \"WV\"\n    },\n    {\n        \"name\": \"Wisconsin\",\n        \"abbreviation\": \"WI\"\n    },\n    {\n        \"name\": \"Wyoming\",\n        \"abbreviation\": \"WY\"\n    }\n]\n\nexport default STATES","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useLocation } from 'react-router-dom'\n\nfunction CheckoutSteps({ step1, step2, step3 }) {\n\n    const location = useLocation()\n    const path = location.pathname\n\n    return (\n        <Nav className=\"justify-content-between mb-3\">\n            <Nav.Item>\n                <LinkContainer to={ !step2 && !step3 ? '/cart' : step2 && !step3 ? '/shipping' : '/payment'}>\n                    <Nav.Link className=\"checkout-link-active\"><i className=\"fa-solid fa-angle-left\"></i> Go Back</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n\n            <div className=\"d-flex\">\n                <Nav.Item>\n                    {\n                        step1 ? (\n                            <LinkContainer to='/shipping' className={ path === '/shipping' ? \"border-bottom border-dark\" : \"\" }>\n                                <Nav.Link className=\"checkout-link-active\">Shipping</Nav.Link>\n                            </LinkContainer>\n                        ) : (\n                            <Nav.Link disabled>Shipping</Nav.Link>\n                        )\n                    }\n                </Nav.Item>\n                <Nav.Item>\n                    {\n                        step2 ? (\n                            <LinkContainer to='/payment' className={ path === '/payment' ? \"border-bottom border-dark\" : \"\" }>\n                                <Nav.Link className=\"checkout-link-active\">Payment</Nav.Link>\n                            </LinkContainer>\n                        ) : (\n                            <Nav.Link disabled>Payment</Nav.Link>\n                        )\n                    }\n                </Nav.Item>\n                <Nav.Item>\n                    {\n                        step3 ? (\n                            <LinkContainer to='/placeorder' className={ path === '/placeorder' ? \"border-bottom border-dark\" : \"\" }>\n                                <Nav.Link className=\"checkout-link-active\">Place Order</Nav.Link>\n                            </LinkContainer>\n                        ) : (\n                            <Nav.Link disabled>Place Order</Nav.Link>\n                        )\n                    }\n                </Nav.Item>\n            </div>\n\n            <Nav.Item>\n                <LinkContainer to='/cart'>\n                    <Nav.Link className=\"checkout-link-active\"><i className=\"fa-solid fa-angle-left\"></i> Back to cart</Nav.Link>\n                </LinkContainer>\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, {useState, useEffect} from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport STATES from '../constants/usStatesConstants'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport CartSummaryAccordion from '../components/CartSummaryAccordion'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen() {\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems, shippingAddress, message } = cart\n\n    const user = useSelector( state => state.userLogin)\n    const { userInfo } = user\n\n    const [name, setName] = useState(shippingAddress.name)\n    const [streetAddress, setStreetAddress] = useState(shippingAddress.streetAddress)\n    const [aptAddress, setAptAddress] = useState(shippingAddress.aptAddress ? shippingAddress.aptAddress : \"\")\n    const [city, setCity] = useState(shippingAddress.city)\n    const [state, setState] = useState(shippingAddress.state)\n    const [zip, setZip] = useState(shippingAddress.zip)\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(cartItems.length === 0 || !userInfo){\n            navigate('/cart')\n        }\n    }, [])\n\n    const submitShippingHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress( {\n            name: name,\n            streetAddress: streetAddress,\n            aptAddress: aptAddress,\n            city: city,\n            state: state,\n            zip: zip,\n        } ))\n        navigate('/payment')\n    }\n\n    return (\n        <div>\n            {  message && <Message variant=\"primary\">{message}</Message> }\n            <CheckoutSteps step1 />\n            <Row>\n                <Col md={8}>\n                    <FormContainer md={8}>\n                        <h2>Shipping Address</h2>\n                        <Form onSubmit={submitShippingHandler}>\n                            <Form.Group className=\"my-2\" controlid=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Your name\" value={name ? name : ''} onChange={(e) => setName(e.target.value)} required />\n                            </Form.Group>\n                            <Form.Group className=\"my-2\" controlid=\"street-address\">\n                                <Form.Label>Address</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Street address or P.O. Box\" value={streetAddress ? streetAddress : ''} onChange={(e) => setStreetAddress(e.target.value)} required />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"apt-address\">\n                                <Form.Control type=\"text\" placeholder=\"Apt, suite, unit, building, floor, etc.\" value={aptAddress ? aptAddress : ''} onChange={(e) => setAptAddress(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"city\">\n                                <Form.Label>City</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"City\" value={city ? city : ''} onChange={(e) => setCity(e.target.value)} required />\n                            </Form.Group>\n\n                            <Row>\n                                <Col md={6} sm={12}>\n                                    <Form.Group className=\"my-2\" controlid=\"state\">\n                                        <Form.Label>State</Form.Label>\n                                        <Form.Select aria-label=\"State\" as=\"select\" onChange={(e) => setState(e.target.value)} required >\n                                            <option key={0} value=''>State</option>\n                                            {\n                                                STATES.map((state) => (\n                                                    <option key={state.name} value={state.abbreviation}>{state.name}</option>\n                                                ))\n                                            }\n                                        </Form.Select>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Group className=\"my-2\" controlid=\"city\">\n                                        <Form.Label>ZIP Code</Form.Label>\n                                        <Form.Control type=\"text\" value={zip ? zip : ''} onChange={(e) => setZip(e.target.value)} required />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <span className=\"d-flex\">\n                                <Button type=\"submit\" variant=\"primary\" className=\"my-2 ms-auto\">Proceed to Payment</Button>\n                            </span>\n                        </Form>\n                    </FormContainer>\n                </Col>\n\n                <Col md={4}>\n                    <CartSummaryAccordion items={cartItems} />\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport CartSummaryAccordion from '../components/CartSummaryAccordion'\n\nimport { savePaymentMethod, calculatePrice } from '../actions/cartActions'\n\nfunction PaymentScreen() {\n\n    const [paymentMethod, setPaymentMethod] = useState('')\n\n    const cart = useSelector(state => state.cart) // cart\n    const { cartItems, shippingAddress, shippingPrice, taxPrice } = cart\n\n    const user = useSelector( state => state.userLogin) //user info\n    const { userInfo } = user\n\n    const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(cartItems.length === 0 || !userInfo){\n            navigate('/cart')\n        }\n        // Check if Shipping Address is provided\n        if (!shippingAddress.streetAddress){\n            navigate('/shipping')\n        }\n        dispatch(calculatePrice())\n    }, [])\n\n    const submitPaymentHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        navigate('/placeorder')\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 />\n            <Row>\n                <Col md={8}>\n                    <h2>Payment Methods</h2>\n                    <Form onSubmit={submitPaymentHandler}>\n                        <Form.Group>\n                            <Form.Label as=\"legend\">Select Payment Method</Form.Label>\n                            <Col>\n                                <Form.Check type=\"radio\" label=\"PayPal\" id=\"paypal\" name=\"paymentMethod\" value=\"PayPal\" onChange={(e) => setPaymentMethod(e.target.value)}>\n\n                                </Form.Check>\n\n                                <Form.Check type=\"radio\" label=\"Credit or Debit Card\" id=\"card\" name=\"paymentMethod\" value=\"Card\" onChange={(e) => setPaymentMethod(e.target.value)}>\n\n                                </Form.Check>\n                            </Col>\n                        </Form.Group>\n\n                        <div className=\"d-flex\">\n                            <Button type=\"submit\" variant=\"primary\" className=\"my-2 ms-auto\" disabled={ !paymentMethod && true } >Continue</Button>\n                        </div>\n                    </Form>\n                </Col>\n\n                <Col md={4}>\n                    <CartSummaryAccordion items={cartItems} shippingPrice={shippingPrice} taxPrice={taxPrice}/>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { Row, Col, Button, ListGroup, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport CartSummaryAccordion from '../components/CartSummaryAccordion'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen() {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems, shippingAddress, paymentMethod, subtotalPrice, shippingPrice, taxPrice, totalPrice } = cart\n\n    const user = useSelector(state => state.userLogin)\n    const { userInfo } = user\n\n    // cart.subtotalPrice = cartItems.reduce((acc, cartItem) => acc + cartItem.price * cartItem.qty, 0).toFixed(2)\n    // cart.shippingPrice = Number(cart.subtotalPrice >= 100 ? 0 : 10).toFixed(2)\n    // cart.taxPrice = Number((0.082) * cart.subtotalPrice).toFixed(2)\n    // cart.totalPrice = (Number(cart.subtotalPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    // AVOAq7MSKF4C3MOjpav8qqlDV7k0FBiTeW7hOvOa7WCXJUdjLAkwZslUaT9pcgwquy46tDE66CoXy76P\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if(cartItems.length === 0 || !shippingAddress.streetAddress || !userInfo){\n            navigate('/cart')\n        }\n\n        if(!paymentMethod){\n            navigate('/payment')\n        }\n\n        if(success) {\n            navigate(`/orders/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET }) //clear the order state\n        }\n    }, [success, navigate])\n\n    const placeOrderHandler = () => {\n        const order = {\n            orderItems: cartItems,\n            shippingAddress: shippingAddress,\n            paymentMethod: paymentMethod,\n            subtotalPrice: subtotalPrice,\n            shippingPrice: shippingPrice,\n            taxPrice: taxPrice,\n            totalPrice: totalPrice,\n        }\n        dispatch(createOrder(order))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 />\n            <Row>\n                <Col md={8}>\n                    <h2>Review Information</h2>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h3>Shipping</h3>\n                            <Row>\n                                <Col md={2}><strong>Ship to:</strong></Col>\n                                <Col md={4} className=\"d-flex\">\n                                    <div className=\"ma-auto\">\n                                        { shippingAddress.name } <br/>\n                                        { shippingAddress.streetAddress }, <br/>\n                                        { shippingAddress.aptAddress && `${shippingAddress.aptAddress},`} { shippingAddress.aptAddress && <br/> }\n                                        { shippingAddress.city }, { shippingAddress.state } { shippingAddress.zip }\n                                    </div>\n                                </Col>\n                                \n                                <Col md={2}><strong>Shipping method:</strong></Col>\n                                <Col md={4} className=\"d-flex\">\n                                    <div className=\"ma-auto\">\n                                        Free Shipping (5 - 7 Business days)\n                                    </div>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Payment</h3>\n                            <div>\n                                <strong>Paymeny method:</strong>\n                                { paymentMethod }\n                            </div>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <div className=\"d-flex\">\n                            <h3>In Your Cart</h3>\n                            <Link className=\"ms-auto mt-3\" to='/cart'>Edit</Link>\n                            </div>\n                            <ListGroup variant=\"flush\">\n                                { cartItems.map((cartItem, index) => (\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={cartItem.image} alt={cartItem.name} fluid rounded/>\n                                            </Col>\n\n                                            <Col md={6}>\n                                                <Link to={`/product/${cartItem.productId}`}>{cartItem.name}</Link>\n                                            </Col>\n\n                                            <Col md={3}>\n                                                Quantity : {cartItem.qty}\n                                            </Col>\n\n                                            <Col md={2} className=\"d-flex\">\n                                                <div className=\"ms-auto\">${(cartItem.qty * cartItem.price).toFixed(2)}</div>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                )) }\n                            </ListGroup>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <CartSummaryAccordion items={cartItems} shippingPrice={shippingPrice} taxPrice={taxPrice} />\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            { error && <Message variant=\"danger\">{error}</Message> }\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <div className=\"d-grid gap-2 my-1\">\n                                <Button type=\"button\" size=\"lg\" variant=\"primary\" disabled={cartItems.length === 0} onClick={placeOrderHandler}>Place order</Button>\n                            </div>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport CartSummaryAccordion from '../components/CartSummaryAccordion'\nimport { createOrder, payOrder, payOrderCancel, createOrderDemo } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET, ORDER_CREATE_RESET_DEMO } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen() {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    const orderCreateDemo = useSelector(state => state.orderCreateDemo)\n    const { order: orderDemo, success: successDemo, error: errorDemo } = orderCreateDemo\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay} = orderPay\n\n    const orderPayCancel = useSelector(state => state.orderPayCancel)\n    const { loading: loadingPayCancel, success: successPayCancel, message:messagePayCancel } = orderPayCancel\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems, shippingAddress, paymentMethod, subtotalPrice, shippingPrice, taxPrice, totalPrice } = cart\n\n    const user = useSelector(state => state.userLogin)\n    const { userInfo } = user\n\n    const [sdkReady, setSdkReady] = useState(false) // State determine whether the SDK is ready to be mounted\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AVOAq7MSKF4C3MOjpav8qqlDV7k0FBiTeW7hOvOa7WCXJUdjLAkwZslUaT9pcgwquy46tDE66CoXy76P'\n        script.async = true //give it time for SDK to load\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if(cartItems.length === 0 || !shippingAddress.streetAddress || !userInfo){\n            navigate('/cart')\n        }\n\n        if(!paymentMethod){\n            navigate('/payment')\n        }\n\n        if(!window.paypal){\n            addPayPalScript() //check if paypal sdk is mounted to page\n        } else {\n            setSdkReady(true)\n        }\n\n        //Paypal Payment Successful\n        if(success && successPay) {\n            navigate(`/orders/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET }) //clear the order state\n        }\n\n        //demo pay button\n        if(successDemo){\n            dispatch(payOrder(orderDemo._id, 'success'))\n        }\n        if(successDemo && successPay) {\n            navigate(`/orders/${orderDemo._id}`)\n            dispatch({ type: ORDER_CREATE_RESET_DEMO }) //clear the order state\n        }\n    }, [success, successDemo, successPay, navigate])\n\n    const placeOrderHandler = () => {\n        const orderToCreate = {\n            orderItems: cartItems,\n            shippingAddress: shippingAddress,\n            paymentMethod: paymentMethod,\n            subtotalPrice: subtotalPrice,\n            shippingPrice: shippingPrice,\n            taxPrice: taxPrice,\n            totalPrice: totalPrice,\n        }\n        dispatch(createOrder(orderToCreate))\n    }\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(order._id, paymentResult))\n    }\n\n    const cancelPaymentHandler = () => {\n        const currOrderId = JSON.parse(localStorage.getItem('currentOrder'))._id\n        console.log(currOrderId)\n        dispatch(payOrderCancel(currOrderId))\n    }\n\n    //Demo\n    const placeOrderDemoHandler = () => {\n        const orderToCreate = {\n            orderItems: cartItems,\n            shippingAddress: shippingAddress,\n            paymentMethod: paymentMethod,\n            subtotalPrice: subtotalPrice,\n            shippingPrice: shippingPrice,\n            taxPrice: taxPrice,\n            totalPrice: totalPrice,\n        }\n        dispatch(createOrderDemo(orderToCreate))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 />\n            <Row>\n                <Col md={8}>\n                    <h2>Review Information</h2>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h3>Shipping</h3>\n                            <Row>\n                                <Col md={2}><strong>Ship to:</strong></Col>\n                                <Col md={4} className=\"d-flex\">\n                                    <div className=\"ma-auto\">\n                                        { shippingAddress.name } <br/>\n                                        { shippingAddress.streetAddress }, <br/>\n                                        { shippingAddress.aptAddress && `${shippingAddress.aptAddress},`} { shippingAddress.aptAddress && <br/> }\n                                        { shippingAddress.city }, { shippingAddress.state } { shippingAddress.zip }\n                                    </div>\n                                </Col>\n                                \n                                <Col md={2}><strong>Shipping method:</strong></Col>\n                                <Col md={4} className=\"d-flex\">\n                                    <div className=\"ma-auto\">\n                                        Free Shipping (5 - 7 Business days)\n                                    </div>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h3>Payment</h3>\n                            <div>\n                                <strong>Paymeny method:</strong>\n                                { paymentMethod }\n                            </div>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <div className=\"d-flex\">\n                            <h3>In Your Cart</h3>\n                            <Link className=\"ms-auto mt-3\" to='/cart'>Edit</Link>\n                            </div>\n                            <ListGroup variant=\"flush\">\n                                { cartItems.map((cartItem, index) => (\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={cartItem.image} alt={cartItem.name} fluid rounded/>\n                                            </Col>\n\n                                            <Col md={6}>\n                                                <Link to={`/product/${cartItem.productId}`}>{cartItem.name}</Link>\n                                            </Col>\n\n                                            <Col md={3}>\n                                                Quantity : {cartItem.qty}\n                                            </Col>\n\n                                            <Col md={2} className=\"d-flex\">\n                                                <div className=\"ms-auto\">${(cartItem.qty * cartItem.price).toFixed(2)}</div>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                )) }\n                            </ListGroup>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <CartSummaryAccordion items={cartItems} shippingPrice={shippingPrice} taxPrice={taxPrice} />\n                    { error && <Message variant=\"danger\">{error}</Message> }\n                    { paymentMethod === 'PayPal' ?\n                        <div>\n                            {loadingPay && <Loader />}\n\n                            <Message variant=\"danger\">PayPal is sandbox mode. If you do not have a sandbox paypal account, click the button below to complete checkout.</Message>\n                            <Button type=\"button\" onClick={placeOrderDemoHandler}>Complete payment</Button>\n\n                            {!sdkReady ? (<Loader />)\n                                    : (<PayPalButton amount={totalPrice} onClick={placeOrderHandler} onCancel={cancelPaymentHandler} onSuccess={successPaymentHandler} />)\n                            }\n                        </div>\n                        : <Message variant=\"danger\">Sorry, we currently only accept PayPal payments</Message>\n                    }\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect, useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\n\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport CartSummaryAccordion from '../components/CartSummaryAccordion'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen() {\n    const { id } = useParams()\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay, error: errorPay} = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver, error: errorDeliver } = orderDeliver \n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    if(!loading && !error){\n        order.subtotalPrice = order.orderItems.reduce((acc, orderItem) => acc + orderItem.price * orderItem.qty, 0).toFixed(2)\n    }\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const [sdkReady, setSdkReady] = useState(false) // State determine whether the SDK is ready to be mounted\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AVOAq7MSKF4C3MOjpav8qqlDV7k0FBiTeW7hOvOa7WCXJUdjLAkwZslUaT9pcgwquy46tDE66CoXy76P'\n        script.async = true //give it time for SDK to load\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n        if(!userInfo){\n            navigate(`/login?redirect=orders/${id}`)\n        }\n\n        if(!order || successPay || successDeliver || order._id !== Number(id) ){\n            dispatch({ type: ORDER_PAY_RESET }) //reset payment status after payment success\n            dispatch({ type: ORDER_DELIVER_RESET }) //reset deliver reducer after setting deliver status\n            dispatch(getOrderDetails(id))\n        }\n        else if (!order.isPaid){ //check if the order is paid or not\n            if(!window.paypal){\n                addPayPalScript() //check if paypal sdk is mounted to page\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, id, successPay, successDeliver])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(id, 'success'))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order._id))\n    }\n\n    return loading ? (<Loader />)\n        : error ? (<Message variant=\"dark\">{error}</Message>)\n        :\n        (\n            <div>\n                { order ?\n                    <Row>\n                       <h2>Order # { order._id }</h2>\n                        <Col md={8}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h3>Shipping</h3>\n                                    <Row>\n                                        <Col md={2}><strong>Ship to:</strong></Col>\n                                        <Col md={4} className=\"d-flex\">\n                                            <div className=\"ma-auto\">\n                                                { order.shippingAddress.name } <br/>\n                                                { order.shippingAddress.street_address }, <br/>\n                                                { order.shippingAddress.apt_address && `${order.shippingAddress.apt_address},`} { order.shippingAddress.apt_address && <br/> }\n                                                { order.shippingAddress.city }, { order.shippingAddress.state } { order.shippingAddress.zip }\n                                            </div>\n                                        </Col>\n                                        \n                                        <Col md={2}><strong>Shipping method:</strong></Col>\n                                        <Col md={4} className=\"d-flex\">\n                                            <div className=\"ma-auto\">\n                                                Free Shipping (5 - 7 Business days)\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <div className=\"m-2\">\n                                        {order.isDelivered ? (<Message variant=\"success\">Delivered on {order.deliverd_date.substr(0, 10)}</Message>)\n                                            : (<Message variant=\"primary\">Delivery in progress </Message>)\n                                        }\n                                    </div>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h3>Payment</h3>\n                                    <div>\n                                        <strong>Paymeny method:</strong>\n                                        { order.paymentMethod }\n                                    </div>\n                                    <div className=\"m-2\">\n                                        {order.isPaid ? (<Message variant=\"success\">Transaction complete on {order.paid_date.substr(0, 10)}</Message>)\n                                            : (<Message variant=\"warning\">Transaction incomplete</Message>)\n                                        }\n                                    </div>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <div className=\"d-flex\">\n                                    <h3>Your Items</h3>\n                                    </div>\n                                    <ListGroup variant=\"flush\">\n                                        { order.orderItems.map((orderItem, index) => (\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={orderItem.image} alt={orderItem.name} fluid rounded/>\n                                                    </Col>\n\n                                                    <Col md={6}>\n                                                        {orderItem.name}\n                                                    </Col>\n\n                                                    <Col md={3}>\n                                                        Quantity : {orderItem.qty}\n                                                    </Col>\n\n                                                    <Col md={2} className=\"d-flex\">\n                                                        <div className=\"ms-auto\">${(orderItem.qty * orderItem.price).toFixed(2)}</div>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        )) }\n                                    </ListGroup>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n\n                        <Col md={4}>\n                            <CartSummaryAccordion items={order.orderItems} shippingPrice={order.shipping_price} taxPrice={order.tax_price} />\n                            {!order.isPaid && (\n                                <div>\n                                    {loadingPay && <Loader />}\n\n                                    <Message variant=\"danger\">PayPal is disabled on this demo. Click the button below to complete checkout.</Message>\n                                    <Button type=\"button\" onClick={successPaymentHandler}>Complete payment</Button>\n                                    {/* {!sdkReady ? (<Loader />)\n                                            : (<PayPalButton amount={order.total_price} onSuccess={successPaymentHandler} />)\n                                    } */}\n                                </div>\n                            )}\n\n\n                            { loadingDeliver && <Loader /> }\n                            {\n                                userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <div className=\"d-grid gap-2 my-1\">\n                                        <Button type=\"button\" size=\"lg\" variant=\"primary\" onClick={deliverHandler}>Mark as delivered</Button>\n                                    </div>\n                                )\n\n                            }\n                        </Col>\n                    </Row>\n                    : <></>\n                }\n            </div>\n        )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserList, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen() {\n\n    const userList = useSelector(state => state.userList)\n    const { users, loading, error } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success:successDelete, error:errorDelete, message:messageDelete } = userDelete\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if(userInfo){\n            if(!userInfo.isAdmin){\n                navigate('/')\n            }\n            dispatch(getUserList())\n        } else{\n            navigate('/login?redirect=admin/all-users')\n        }\n    }, [dispatch, navigate, successDelete])\n\n    const deleteHandler = (id, username) => {\n        if(window.confirm(`Deleting user: ${username}`)){\n            dispatch(deleteUser(id))\n        }\n    }\n    return (\n        <div>\n            <h2>Users</h2>\n            { error && <Message variant=\"danger\">{error}</Message>}\n            { errorDelete && <Message variant=\"danger\" fade>{errorDelete}</Message>}\n            { messageDelete && <Message variant=\"primary\" fade>{messageDelete}</Message>}\n            { loading && <Loader /> }\n            { users && \n                (\n                    <Table striped responsive bordered hover>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Username</th>\n                                <th>Email</th>\n                                <th>Name</th>\n                                <th>Role</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            { users.map(user => (\n                                <tr key={user._id}>\n                                    <td>{ String(user._id).padStart(5, '0') }</td>\n                                    <td>{ user.username }</td>\n                                    <td>{ user.email }</td>\n                                    <td>{ user.name }</td>\n                                    <td>{ user.isAdmin ? 'Admin' : 'User' }</td>\n                                    <td>\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                            <Button variant=\"light\" className=\"btn-sm\"><i className=\"fas fa-edit\"></i></Button>\n                                        </LinkContainer>\n                                    </td>\n                                    <td><Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id, user.username)}><i className=\"fas fa-trash\"></i></Button></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )\n            }\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, {useState, useEffect} from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET, USER_DETAILS_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen() {\n\n    const { id:userId } = useParams()\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { user, loading, error } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate\n\n    useEffect(() => {\n        if(userInfo){\n            if(userInfo.isAdmin){\n                if(successUpdate){\n                    dispatch({ type: USER_UPDATE_RESET })\n                    dispatch({ type: USER_DETAILS_RESET })\n                    navigate('/admin/all-users')\n                }else{\n                    if(!user || user._id !== Number(userId)){\n                        dispatch(getUserDetails(userId))\n                    } else{\n                        setName(user.name)\n                        setEmail(user.email)\n                        setIsAdmin(user.isAdmin)\n                    }\n                }\n            } else{\n                navigate('/')\n            }\n        } else{\n            navigate('/login?redirect=admin/all-users')\n        }\n    },[user, userId, successUpdate])\n\n    const submitUpdateHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ 'name':name, 'email':email, 'isAdmin':isAdmin }, user._id))\n    }\n\n    return (\n        <div>\n            {/* Breadcrumb */}\n            <section id=\"bc\" className=\"my-3\">\n                <div>\n                    <nav>\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <Link to=\"/admin/all-users\">Go back</Link>\n                            </li>\n                            <li className=\"breadcrumb-item active\">\n                                { userId } - { user.username }\n                            </li>\n                        </ol>\n                    </nav>\n                </div>\n            </section>\n            <FormContainer md={6}>\n                <h2>Edit User</h2>\n                {loading && <Loader />}\n                {errorUpdate && <Message variant=\"danger\" fade>{ errorUpdate }</Message>}\n                {\n                    error ? <Message variant=\"danger\">{error}</Message>\n                        :\n                        <Form onSubmit={submitUpdateHandler}>\n                            <Form.Group className=\"my-2\" controlid=\"email\">\n                                <Form.Label>Username / Email</Form.Label>\n                                <Form.Control type=\"email\" value={email} plaintext readOnly />\n                            </Form.Group>\n\n                            <Form.Group className=\"my-2\" controlid=\"name\">\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control type=\"name\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n                            </Form.Group>\n        \n                            <Form.Group className=\"my-2\" controlid=\"isAdmin\">\n                                <Form.Check type=\"checkbox\" label=\"Admin\" checked={ isAdmin } onChange={(e) => setIsAdmin(e.target.checked)} />\n                            </Form.Group>\n        \n                            { loadingUpdate ? <Loader />\n                                            : <Button type=\"submit\" variant=\"primary\" className=\"my-2\">Update</Button> }\n        \n                        </Form>\n                }\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getOrders } from '../actions/orderActions'\n\nfunction OrderListScreen() {\n\n    const orderList = useSelector(state => state.orderList)\n    const { orders, loading, error } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        if(userInfo){\n            if(!userInfo.isAdmin){\n                navigate('/')\n            }\n            dispatch(getOrders())\n        } else{\n            navigate('/login?redirect=admin/all-orders')\n        }\n    }, [dispatch, navigate])\n\n    return (\n        <div>\n            <h2>Orders</h2>\n            { error && <Message variant=\"danger\">{error}</Message>}\n            { loading && <Loader /> }\n            { orders && \n                (\n                    <Table striped responsive bordered hover>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>User</th>\n                                <th>Date</th>\n                                <th>Total price</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            { orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{ String(order._id).padStart(5, '0') }</td>\n                                    <td>{ order.user && order.user.username }</td>\n                                    <td>{ order.created_date.substr(0, 10) }</td>\n                                    <td>${ order.total_price }</td>\n                                    <td>{ order.isPaid ? order.paid_date.substr(0, 10) : 'No' }</td>\n                                    <td>{ order.isDelivered ? order.deliverd_date.substr(0, 10) : 'No' }</td>\n                                    <td>\n                                        <LinkContainer to={`/orders/${order._id}`}>\n                                            <Button variant=\"primary\" className=\"btn-sm\">Detail</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )\n            }\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","import React from 'react';\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\n\nimport LoginScreen from './screens/LoginScreen'\nimport LogoutScreen from './screens/LogoutScreen'\nimport RegisterScreen from './screens/RegisterScreen'\n\nimport ProfileScreen from './screens/ProfileScreen'\nimport ProfileOrdersScreen from './screens/ProfileOrdersScreen'\n\nimport ProductScreen from './screens/ProductScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen';\n\nimport CartScreen from './screens/CartScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport PlaceOrderPayScreen from './screens/PlaceOrderPayScreen'\nimport OrderScreen from './screens/OrderScreen'\n\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\n\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Routes>\n            <Route path='/' element={<HomeScreen />} exact />\n\n            {/* Users Authentications */}\n            <Route path='/login' element={<LoginScreen />} />\n            <Route path='/logout' element={<LogoutScreen />} />\n            <Route path=\"/register\" element={<RegisterScreen />} />\n\n            {/* Users Profiles  */}\n            <Route path=\"/profile\" element={<ProfileScreen />} />\n            <Route path=\"/profile/orders\" element={<ProfileOrdersScreen />} />\n\n            {/* Admin */}\n            <Route path=\"/admin/all-users\" element={<UserListScreen />} />\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />} />\n            <Route path=\"/admin/all-products\" element={<ProductListScreen />} />\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />} />\n            <Route path=\"/admin/all-orders\" element={<OrderListScreen />} />\n            {/* <Route path=\"/admin/product/:id/edit\" element={<UserEditScreen />} /> */}\n\n            {/* Products  */}\n            <Route path='/product/:id' element={<ProductScreen />} />\n            <Route path=\"/cart\" element={<CartScreen />} />\n            <Route path=\"/shipping\" element={<ShippingScreen />} />\n            <Route path=\"/payment\" element={<PaymentScreen />} />\n            {/* <Route path=\"/placeorder\" element={<PlaceOrderScreen />} /> */}\n            <Route path=\"/placeorder\" element={<PlaceOrderPayScreen />} />\n            <Route path='/orders/:id' element={<OrderScreen />} />\n            {/* <Route path=\"/cart/:productId\" element={<CartScreen />} /> */}\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport './bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}